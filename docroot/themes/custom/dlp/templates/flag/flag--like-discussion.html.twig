{#
/**
 * @file
 * Default theme implementation for flag links.
 *
 * Available functions:
 * - flagcount(flag, flaggable) gets the number of flaggings for the given flag and flaggable.
 *
 * Available variables:
 * - attributes: HTML attributes for the link element.
 * - title: The flag link title.
 * - action: 'flag' or 'unflag'
 * - flag: The flag object.
 * - flaggable: The flaggable entity.
 */
#}
{% spaceless %}
  {# Attach the flag CSS library.#}
  {{ attach_library('flag/flag.link') }}

  {# Depending on the flag action, set the appropriate action class. #}
  {% if action == 'unflag' %}
    {% set action_class = 'action-unflag' %}
  {% else %}
    {% set action_class = 'action-flag' %}
  {% endif %}

  {# Set the remaining Flag CSS classes. #}
  {%
  set classes = [
    'flag',
    'flag-' ~ flag.id()|clean_class,
    'js-flag-' ~ flag.id()|clean_class ~ '-' ~ flaggable.id(),
    action_class
  ]
  %}

  {# Attach flag count. #}
  {% set flag_count = flagcount(flag, flaggable) %}

  {# Set nofollow to prevent search bots from crawling anonymous flag links #}
  {% set attributes = attributes.setAttribute('rel', 'nofollow') %}

  <div class="{{classes|join(' ')}}">
    <ul class="links inline list-inline discussion-links">
    {# comment status 0 = Hidden, 1 = Closed, 2 = Open #}
      {% if comment_forum_status == '2' %}
          <li><a{{attributes}}>{{ title }}</a></li>
          <li><a href="#comment-form"><i class="fas fa-reply" aria-hidden="true"></i> Reply</a></li>
        {% if canEdit %}
          <li>{{ drupal_link('<i class="fas fa-pencil-alt" aria-hidden="true"></i> Edit'|t, '/node/' ~ nid ~'/edit', check_access=true) }}</li> 
        {% endif %}
        {% if canDelete %}
          <li>{{ drupal_link('<i class="fas fa-trash-alt" aria-hidden="true"></i> Delete'|t, '/node/' ~ nid ~'/delete', check_access=true) }}</li> 
        {% endif %}
      {% endif %}
      {% if flag_count %}
          <li><span class="flag-count">{{ flag_count }} Likes</span></li>
      {% endif %}
    </ul>
  </div>

{% endspaceless %}
