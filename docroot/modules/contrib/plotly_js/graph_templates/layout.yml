---
graphtype: layout
fields:
- fieldname: title
  title: Title
  values: string
  description: Sets the plot's title.
- fieldname: titlefont
  title: Title Font
  description: Sets the title font.
  subfields:
  - fieldname: family
    title: Family
    values: string
    description: HTML font family - the typeface that will be applied by the web browser.
      The web browser will only be able to apply a font if it is available on the
      system which it operates. Provide multiple font families, separated by commas,
      to indicate the preference in which to apply fonts if they aren't available
      on the system. The plotly service (at https://plot.ly or on-premise) generates
      images on a server, where only a select number of fonts are installed and supported.
      These include `Arial`, `Balto`, `Courier New`, `Droid Sans`,, `Droid Serif`,
      `Droid Sans Mono`, `Gravitas One`, `Old Standard TT`, `Open Sans`, `Overpass`,
      `PT Sans Narrow`, `Raleway`, `Times New Roman`.
  - fieldname: size
    title: Size
    values: number
    min: 1
  - fieldname: color
    values: color
- fieldname: font
  description: Sets the global font. Note that fonts used in traces and other layout
    components inherit from the global font.
  subfields:
  - fieldname: family
    title: Family
    values: string
    default: '`Open Sans`, verdana, arial, sans-serif'
    description: HTML font family - the typeface that will be applied by the web browser.
      The web browser will only be able to apply a font if it is available on the
      system which it operates. Provide multiple font families, separated by commas,
      to indicate the preference in which to apply fonts if they aren't available
      on the system. The plotly service (at https://plot.ly or on-premise) generates
      images on a server, where only a select number of fonts are installed and supported.
      These include `Arial`, `Balto`, `Courier New`, `Droid Sans`,, `Droid Serif`,
      `Droid Sans Mono`, `Gravitas One`, `Old Standard TT`, `Open Sans`, `Overpass`,
      `PT Sans Narrow`, `Raleway`, `Times New Roman`.
  - fieldname: size
    title: Size
    values: number
    min: 1
    default: 12
  - fieldname: color
    title: Color
    values: color
    default: '#444'
- fieldname: xaxis
  title: X Axis
  subfields:
  - fieldname: title
    title: Title
    values: string
    description: Sets the title of this axis.
  - fieldname: titlefont
    title: Title Font
    description: Sets this axis' title font.
    subfields:
    - fieldname: family
      title: Family
      values: string
      description: HTML font family - the typeface that will be applied by the web
        browser. The web browser will only be able to apply a font if it is available
        on the system which it operates. Provide multiple font families, separated
        by commas, to indicate the preference in which to apply fonts if they aren't
        available on the system. The plotly service (at https://plot.ly or on-premise)
        generates images on a server, where only a select number of fonts are installed
        and supported. These include `Arial`, `Balto`, `Courier New`, `Droid Sans`,,
        `Droid Serif`, `Droid Sans Mono`, `Gravitas One`, `Old Standard TT`, `Open
        Sans`, `Overpass`, `PT Sans Narrow`, `Raleway`, `Times New Roman`.
    - fieldname: size
      title: Size
      values: number
      min: 1
    - fieldname: color
      title: Color
      values: color
  - fieldname: visible
    title: Visible
    values: boolean
    description: A single toggle to hide the axis while preserving interaction like
      dragging. Default is true when a cheater plot is present on the axis, otherwise
      false
  - fieldname: color
    title: Color
    values: color
    default: '#444'
    description: 'Sets default for all colors associated with this axis all at once:
      line, font, tick, and grid colors. Grid color is lightened by blending this
      with the plot background Individual pieces can override this.'
  - fieldname: type
    title: Type
    values:
      - '-'
      - linear
      - log
      - date
      - category
    default: '-'
    description: Sets the axis type. By default, plotly attempts to determined the
      axis type by looking into the data of the traces that referenced the axis in
      question.
  - fieldname: autorange
    title: Automatic Range
    values:
      - 'true'
      - 'false'
      - reversed
    default: 'true'
    description: Determines whether or not the range of this axis is computed in relation
      to the input data. See `rangemode` for more info. If `range` is provided, then
      `autorange` is set to `false`.
  - fieldname: rangemode
    title: Rangemode
    values:
      - normal
      - tozero
      - nonnegative
    default: normal
    description: If `normal`, the range is computed in relation to the extrema of
      the input data. If `tozero``, the range extends to 0, regardless of the input
      data If `nonnegative`, the range is non-negative, regardless of the input data.
  - fieldname: range
    title: Range
    values: array
    description: Sets the range of this axis. If the axis `type` is `log`, then you
      must take the log of your desired range (e.g. to set the range from 1 to 100,
      set the range from 0 to 2). If the axis `type` is `date`, it should be date
      strings, like date data, though Date objects and unix milliseconds will be accepted
      and converted to strings. If the axis `type` is `category`, it should be numbers,
      using the scale where each category is assigned a serial number from zero in
      the order it appears. Each object has one or more of the keys listed below.
  - fieldname: fixedrange
    title: Fixed Range
    values: boolean
    description: Determines whether or not this axis is zoom-able. If true, then zoom
      is disabled.
  - fieldname: scaleanchor
    title: Scale Anchor
    values:
      - x
      - y
    description: 'If set to another axis id (e.g. `x2`, `y`), the range of this axis
      changes together with the range of the corresponding axis such that the scale
      of pixels per unit is in a constant ratio. Both axes are still zoomable, but
      when you zoom one, the other will zoom the same amount, keeping a fixed midpoint.
      `constrain` and `constraintoward` determine how we enforce the constraint. You
      can chain these, ie `yaxis: {scaleanchor: `x`}, xaxis2: {scaleanchor: `y`}`
      but you can only link axes of the same `type`. The linked axis can have the
      opposite letter (to constrain the aspect ratio) or the same letter (to match
      scales across subplots). Loops (`yaxis: {scaleanchor: `x`}, xaxis: {scaleanchor:
      `y`}` or longer) are redundant and the last constraint encountered will be ignored
      to avoid possible inconsistent constraints via `scaleratio`.'
  - fieldname: scaleratio
    title: Scale Ratio
    values: number
    min: 0
    default: 1
    description: If this axis is linked to another by `scaleanchor`, this determines
      the pixel to unit scale ratio. For example, if this value is 10, then every
      unit on this axis spans 10 times the number of pixels as a unit on the linked
      axis. Use this for example to create an elevation profile where the vertical
      scale is exaggerated a fixed amount with respect to the horizontal.
  - fieldname: constrain
    title: Constrain
    values:
      - range
      - domain
    default: range
    description: 'If this axis needs to be compressed (either due to its own `scaleanchor`
      and `scaleratio` or those of the other axis), determines how that happens: by
      increasing the `range` (default), or by decreasing the `domain`.'
  - fieldname: constraintoward
    title: Constrain Toward
    values:
      - left
      - center
      - right
      - top
      - middle
      - bottom
    description: If this axis needs to be compressed (either due to its own `scaleanchor`
      and `scaleratio` or those of the other axis), determines which direction we
      push the originally specified plot area. Options are `left`, `center` (default),
      and `right` for x axes, and `top`, `middle` (default), and `bottom` for y axes.
  - fieldname: tickmode
    title: Tick Mode
    values:
      - auto
      - linear
      - array
    description: Sets the tick mode for this axis. If `auto`, the number of ticks
      is set via `nticks`. If `linear`, the placement of the ticks is determined by
      a starting position `tick0` and a tick step `dtick` (`linear` is the default
      value if `tick0` and `dtick` are provided). If `array`, the placement of the
      ticks is set via `tickvals` and the tick text is `ticktext`. (`array` is the
      default value if `tickvals` is provided).
  - fieldname: nticks
    title: Maximum Number of Ticks
    values: integer
    min: 0
    default: 0
    description: Specifies the maximum number of ticks for the particular axis. The
      actual number of ticks will be chosen automatically to be less than or equal
      to `nticks`. Has an effect only if `tickmode` is set to `auto`.
  - fieldname: tick0
    title: First Tick Position
    values: number or categorical coordinate string
    description: Sets the placement of the first tick on this axis. Use with `dtick`.
      If the axis `type` is `log`, then you must take the log of your starting tick
      (e.g. to set the starting tick to 100, set the `tick0` to 2) except when `dtick`=`L&lt;f&gt;`
      (see `dtick` for more info). If the axis `type` is `date`, it should be a date
      string, like date data. If the axis `type` is `category`, it should be a number,
      using the scale where each category is assigned a serial number from zero in
      the order it appears.
  - fieldname: dtick
    title: Tick In-Between Step
    values: number or categorical coordinate string
    description: Sets the step in-between ticks on this axis. Use with `tick0`. Must
      be a positive number, or special strings available to `log` and `date` axes.
      If the axis `type` is `log`, then ticks are set every 10^(n`dtick) where n is
      the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set
      dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick
      marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433.
      `log` has several special values; `L&lt;f&gt;`, where `f` is a positive number,
      gives ticks linearly spaced in value (but not position). For example `tick0`
      = 0.1, `dtick` = `L0.5` will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers
      of 10 plus small digits between, use `D1` (all digits) or `D2` (only 2 and 5).
      `tick0` is ignored for `D1` and `D2`. If the axis `type` is `date`, then you
      must convert the time to milliseconds. For example, to set the interval between
      ticks to one day, set `dtick` to 86400000.0. `date` also has special values
      `M&lt;n&gt;` gives ticks spaced by a number of months. `n` must be a positive
      integer. To set ticks on the 15th of every third month, set `tick0` to `2000-01-15`
      and `dtick` to `M3`. To set ticks every 4 years, set `dtick` to `M48`
  - fieldname: tickvals
    title: Tick Values
    values: data array
    description: Sets the values at which ticks on this axis appear. Only has an effect
      if `tickmode` is set to `array`. Used with `ticktext`.
  - fieldname: ticktext
    title: Tick Text
    values: data array
    description: Sets the text displayed at the ticks position via `tickvals`. Only
      has an effect if `tickmode` is set to `array`. Used with `tickvals`.
  - fieldname: ticks
    title: Ticks
    values:
      - ''
      - outside
      - inside
    description: Determines whether ticks are drawn or not. If ``, this axis' ticks
      are not drawn. If `outside` (`inside`), this axis' are drawn outside (inside)
      the axis lines.
  - fieldname: mirror
    title: Mirror
    values:
      - 'true'
      - ticks
      - 'false'
      - all
      - allticks
    description: Determines if the axis lines or/and ticks are mirrored to the opposite
      side of the plotting area. If `true`, the axis lines are mirrored. If `ticks`,
      the axis lines and ticks are mirrored. If `false`, mirroring is disable. If
      `all`, axis lines are mirrored on all shared-axes subplots. If `allticks`, axis
      lines and ticks are mirrored on all shared-axes subplots.
  - fieldname: ticklen
    title: Tick Length
    values: number
    min: 0
    default: 5
    description: Sets the tick length (in px).
  - fieldname: tickwidth
    title: Tick Width
    values: number
    min: 0
    default: 1
    description: Sets the tick width (in px).
  - fieldname: tickcolor
    title: Tick Color
    values: color
    default: '#444'
    description: Sets the tick color.
  - fieldname: showticklabels
    title: Show Tick Labels
    values: boolean
    default: 'true'
    description: Determines whether or not the tick labels are drawn.
  - fieldname: tickfont
    title: Tick Font
    description: Sets the tick font.
    subfields:
    - fieldname: family
      title: Family
      values: string
      description: HTML font family - the typeface that will be applied by the web
        browser. The web browser will only be able to apply a font if it is available
        on the system which it operates. Provide multiple font families, separated
        by commas, to indicate the preference in which to apply fonts if they aren't
        available on the system. The plotly service (at https://plot.ly or on-premise)
        generates images on a server, where only a select number of fonts are installed
        and supported. These include `Arial`, `Balto`, `Courier New`, `Droid Sans`,,
        `Droid Serif`, `Droid Sans Mono`, `Gravitas One`, `Old Standard TT`, `Open
        Sans`, `Overpass`, `PT Sans Narrow`, `Raleway`, `Times New Roman`.
    - fieldname: size
      title: Size
      values: number
      min: 1
    - fieldname: color
      title: Color
      values: color
  - fieldname: tickangle
    title: Tick Angle
    values: angle
    default: auto
    description: Sets the angle of the tick labels with respect to the horizontal.
      For example, a `tickangle` of -90 draws the tick labels vertically.
  - fieldname: tickprefix
    title: Tick Prefix
    values: string
    default: ''
    description: Sets a tick label prefix.
  - fieldname: showtickprefix
    title: Show Tick Prefix
    values:
      - all
      - first
      - last
      - none
    default: all
    description: If `all`, all tick labels are displayed with a prefix. If `first`,
      only the first tick is displayed with a prefix. If `last`, only the last tick
      is displayed with a suffix. If `none`, tick prefixes are hidden.
  - fieldname: ticksuffix
    title: Tick Suffix
    values: string
    default: ''
    description: Sets a tick label suffix.
  - fieldname: showticksuffix
    title: Show Tick Suffix
    values:
      - all
      - first
      - last
      - none
    default: all
    description: Same as `showtickprefix` but for tick suffixes.
  - fieldname: showexponent
    title: Show Exponent
    values:
      - all
      - first
      - last
      - none
    default: all
    description: If `all`, all exponents are shown besides their significands. If
      `first`, only the exponent of the first tick is shown. If `last`, only the exponent
      of the last tick is shown. If `none`, no exponents appear.
  - fieldname: exponentformat
    title: Exponent Format
    values:
      none: '1,000,000,000'
      e: '1e+9'
      E: '1E+9'
      power: '1x10^9'
      SI: '1G'
      B: '1B'
    default: B
    description: Determines a formatting rule for the tick exponents. The dropdown
      shows formatting for the number 1,000,000,000.
  - fieldname: separatethousands
    title: Separate Thousands
    values: boolean
    description: If `true`, even 4-digit integers are separated
  - fieldname: tickformat
    title: Tick Format
    values: string
    default: ''
    description: 'Sets the tick label formatting rule using d3 formatting mini-languages
      which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format
      And for dates see: https://github.com/d3/d3-time-format/blob/master/README.md#locale_format
      We add one item to d3''s date formatter: `%{n}f` for fractional seconds with
      n digits. For example, `2016-10-13 09:15:23.456` with tickformat `%H~%M~%S.%2f`
      would display `09~15~23.46`'
  - fieldname: showspikes
    title: Show Spikes
    values: boolean
    description: 'Determines whether or not spikes (aka droplines) are drawn for this
      axis. Note: This only takes affect when hovermode = closest'
  - fieldname: spikecolor
    title: Spike Color
    values: color
    description: Sets the spike color. If undefined, will use the series color
  - fieldname: spikethickness
    title: Spike Thickness
    values: number
    default: 3
    description: Sets the width (in px) of the zero line.
  - fieldname: spikedash
    title: Spike Dash Style
    values: string
    default: dash
    description: Sets the dash style of lines. Set to a dash type string (`solid`,
      `dot`, `dash`, `longdash`, `dashdot`, or `longdashdot`) or a dash length list
      in px (eg `5px,10px,2px,2px`).
  - fieldname: spikemode
    title: Spike Mode
    values:
      - toaxis
      - across
      - marker
      - toaxis+across
      - toaxis+marker
      - across+marker
      - toaxis+across_marker
    description: Determines the drawing mode for the spike line If `toaxis`, the line
      is drawn from the data point to the axis the series is plotted on. If `across`,
      the line is drawn across the entire plot area, and supercedes `toaxis`. If `marker`,
      then a marker dot is drawn on the axis the series is plotted on
    default: toaxis
  - fieldname: hoverformat
    title: Hover Format
    values: string
    default: ''
    description: 'Sets the hover text formatting rule using d3 formatting mini-languages
      which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format
      And for dates see: https://github.com/d3/d3-time-format/blob/master/README.md#locale_format
      We add one item to d3''s date formatter: `%{n}f` for fractional seconds with
      n digits. For example, `2016-10-13 09:15:23.456` with tickformat `%H~%M~%S.%2f`
      would display `09~15~23.46`'
  - fieldname: showline
    title: Show Bounding Line
    values: boolean
    description: Determines whether or not a line bounding this axis is drawn.
  - fieldname: linecolor
    title: Line Color
    values: color
    default: '#444'
    description: Sets the axis line color.
  - fieldname: linewidth
    title: Linewidth
    values: number
    min: 0
    default: 1
    description: Sets the width (in px) of the axis line.
  - fieldname: showgrid
    title: Show Grid Lines
    values: boolean
    description: Determines whether or not grid lines are drawn. If `true`, the grid
      lines are drawn at every tick mark.
  - fieldname: gridcolor
    title: Grid Color
    values: color
    default: '#eee'
    description: Sets the color of the grid lines.
  - fieldname: gridwidth
    title: Grid Width
    values: number
    min: 0
    default: 1
    description: Sets the width (in px) of the grid lines.
  - fieldname: zeroline
    title: Line at Zero Value
    values: boolean
    description: Determines whether or not a line is drawn at along the 0 value of
      this axis. If `true`, the zero line is drawn on top of the grid lines.
  - fieldname: zerolinecolor
    title: Line at Zero Color
    values: color
    default: '#444'
    description: Sets the line color of the zero line.
  - fieldname: zerolinewidth
    title: Line at Zero Width
    values: number
    default: 1
    description: Sets the width (in px) of the zero line.
  - fieldname: anchor
    title: Anchor
    values:
      - free
      - x
    description: If set to an opposite-letter axis id (e.g. `x2`, `y`), this axis
      is bound to the corresponding opposite-letter axis. If set to `free`, this axis'
      position is determined by `position`.
  - fieldname: side
    title: Axis Side
    values:
      - top
      - bottom
      - left
      - right
    description: Determines whether an x (y) axis is positioned at the `bottom` (`left`)
      or `top` (`right`) of the plotting area.
  - fieldname: overlaying
    title: Overlaying
    values:
      - free
      - x
    description: If set a same-letter axis id, this axis is overlaid on top of the
      corresponding same-letter axis. If `false`, this axis does not overlay any same-letter
      axes.
  - fieldname: layer
    title: Layer
    values:
      - above traces
      - below traces
    default: above traces
    description: Sets the layer on which this axis is displayed. If `above traces`,
      this axis is displayed above all the subplot's traces If `below traces`, this
      axis is displayed below all the subplot's traces, but above the grid lines.
      Useful when used together with scatter-like traces with `cliponaxis` set to
      `false` to show markers and/or text nodes above this axis.
  - fieldname: domain
    title: Domain
    values: array
    default: '0, 1'
    description: Sets the domain of this axis (in plot fraction). Each object has
      one or more of the keys listed below.
  - fieldname: position
    title: Position
    values: number
    min: 0
    max: 1
    default: 0
    description: Sets the position of this axis in the plotting space (in normalized
      coordinates). Only has an effect if `anchor` is set to `free`.
  - fieldname: categoryorder
    title: Axis Category Order
    values:
      - trace
      - category ascending
      - category descending
      - array
    default: trace
    description: Specifies the ordering logic for the case of categorical variables.
      By default, plotly uses `trace`, which specifies the order that is present in
      the data supplied. Set `categoryorder` to `category ascending` or `category
      descending` if order should be determined by the alphanumerical order of the
      category names. Set `categoryorder` to `array` to derive the ordering from the
      attribute `categoryarray`. If a category is not found in the `categoryarray`
      array, the sorting behavior for that attribute will be identical to the `trace`
      mode. The unspecified categories will follow the categories in `categoryarray`.
  - fieldname: categoryarray
    title: Axis Category Array
    values: data array
    description: Sets the order in which categories on this axis appear. Only has
      an effect if `categoryorder` is set to `array`. Used with `categoryorder`.
  - fieldname: rangeslider
    title: Range Slider
    subfields:
    - fieldname: bgcolor
      title: Background Color
      values: color
      default: '#fff'
      description: Sets the background color of the range slider.
    - fieldname: bordercolor
      title: Border Color
      values: color
      default: '#444'
      description: Sets the border color of the range slider.
    - fieldname: borderwidth
      title: Border Width
      values: integer
      min: 0
      default: 0
      description: Sets the border color of the range slider.
    - fieldname: autorange
      title: Automatic Range
      values: boolean
      default: 'true'
      description: Determines whether or not the range slider range is computed in
        relation to the input data. If `range` is provided, then `autorange` is set
        to `false`.
    - fieldname: range
      title: Range
      values: array
      description: Sets the range of the range slider. If not set, defaults to the
        full xaxis range. If the axis `type` is `log`, then you must take the log
        of your desired range. If the axis `type` is `date`, it should be date strings,
        like date data, though Date objects and unix milliseconds will be accepted
        and converted to strings. If the axis `type` is `category`, it should be numbers,
        using the scale where each category is assigned a serial number from zero
        in the order it appears. Each object has one or more of the keys listed below.
    - fieldname: thickness
      title: Thickness
      values: number
      min: 0
      max: 1
      default: 0.15
      description: The height of the range slider as a fraction of the total plot
        area height.
    - fieldname: visible
      title: Visible
      values: boolean
      default: 'true'
      description: Determines whether or not the range slider will be visible. If
        visible, perpendicular axes will be set to `fixedrange`
  - fieldname: rangeselector
    title: Range Selector
    subfields:
    - fieldname: visible
      title: Visible
      values: boolean
      description: Determines whether or not this range selector is visible. Note
        that range selectors are only available for x axes of `type` set to or auto-typed
        to `date`.
    - fieldname: buttons
      description: Each object has one or more of the keys listed below.
      subfields:
      - fieldname: step
        title: Step
        values:
          - month
          - year
          - day
          - hour
          - minute
          - second
          - all
        default: month
        description: The unit of measurement that the `count` value will set the range
          by.
      - fieldname: stepmode
        title: Step Mode
        values:
          - backward
          - todate
        default: backward
        description: Sets the range update mode. If `backward`, the range update shifts
          the start of range back `count` times `step` milliseconds. If `todate`,
          the range update shifts the start of range back to the first timestamp from
          `count` times `step` milliseconds back. For example, with `step` set to
          `year` and `count` set to `1` the range update shifts the start of the range
          back to January 01 of the current year. Month and year `todate` are currently
          available only for the built-in (Gregorian) calendar.
      - fieldname: count
        title: Count
        values: number
        min: 0
        default: 1
        description: Sets the number of steps to take to update the range. Use with
          `step` to specify the update interval.
      - fieldname: label
        title: Label
        values: string
        description: Sets the text label to appear on the button.
    - fieldname: x
      title: X Position
      values: number
      min: -2
      max: 3
      description: Sets the x position (in normalized coordinates) of the range selector.
    - fieldname: xanchor
      title: X Position Anchor
      values:
        - auto
        - left
        - center
        - right
      default: left
      description: Sets the range selector's horizontal position anchor. This anchor
        binds the `x` position to the `left`, `center` or `right` of the range selector.
    - fieldname: y
      title: Y Position
      values: number
      min: -2
      max: 3
      description: Sets the y position (in normalized coordinates) of the range selector.
    - fieldname: yanchor
      title: Y Position Anchor
      values:
        - auto
        - top
        - middle
        - bottom
      default: bottom
      description: Sets the range selector's vertical position anchor This anchor
        binds the `y` position to the `top`, `middle` or `bottom` of the range selector.
    - fieldname: font
      description: Sets the font of the range selector button text.
      subfields:
      - fieldname: family
        title: Family
        values: string
        description: HTML font family - the typeface that will be applied by the web
          browser. The web browser will only be able to apply a font if it is available
          on the system which it operates. Provide multiple font families, separated
          by commas, to indicate the preference in which to apply fonts if they aren't
          available on the system. The plotly service (at https://plot.ly or on-premise)
          generates images on a server, where only a select number of fonts are installed
          and supported. These include `Arial`, `Balto`, `Courier New`, `Droid Sans`,,
          `Droid Serif`, `Droid Sans Mono`, `Gravitas One`, `Old Standard TT`, `Open
          Sans`, `Overpass`, `PT Sans Narrow`, `Raleway`, `Times New Roman`.
      - fieldname: size
        title: Size
        values: number
        min: 1
      - fieldname: color
        title: Color
        values: color
    - fieldname: bgcolor
      title: Background Color
      values: color
      default: '#eee'
      description: Sets the background color of the range selector buttons.
    - fieldname: activecolor
      title: Active Color
      values: color
      description: Sets the background color of the active range selector button.
    - fieldname: bordercolor
      title: Border Color
      values: color
      default: '#444'
      description: Sets the color of the border enclosing the range selector.
    - fieldname: borderwidth
      title: Border Width
      values: number
      min: 0
      default: 0
      description: Sets the width (in px) of the border enclosing the range selector.
  - fieldname: calendar
    title: Calendar
    values:
      gregorian: Gregorian
      chinese: Chinese
      coptic: Coptic
      discworld: Discworld
      ethiopian: Ethiopian
      hebrew: Hebrew
      islamic: Islamic
      julian: Julian
      mayan: Mayan
      nanakshahi: Nanakshahi
      nepali: Nepali
      persian: Old Persian
      jalali: Jalali
      taiwan: Minguo
      thai: Thai
      ummalqura: Umm al-Qura
    default: gregorian
    description: Sets the calendar system to use for `range` and `tick0` if this is
      a date axis. This does not set the calendar for interpreting data on this axis,
      that's specified in the trace or via the global `layout.calendar`
  - fieldname: tickvalssrc
  - fieldname: ticktextsrc
  - fieldname: categoryarraysrc
- fieldname: yaxis
  title: Y Axis
  subfields:
  - fieldname: title
    title: Title
    values: string
    description: Sets the title of this axis.
  - fieldname: titlefont
    title: Title Font
    description: Sets this axis' title font.
    subfields:
    - fieldname: family
      title: Family
      values: string
      description: HTML font family - the typeface that will be applied by the web
        browser. The web browser will only be able to apply a font if it is available
        on the system which it operates. Provide multiple font families, separated
        by commas, to indicate the preference in which to apply fonts if they aren't
        available on the system. The plotly service (at https://plot.ly or on-premise)
        generates images on a server, where only a select number of fonts are installed
        and supported. These include `Arial`, `Balto`, `Courier New`, `Droid Sans`,,
        `Droid Serif`, `Droid Sans Mono`, `Gravitas One`, `Old Standard TT`, `Open
        Sans`, `Overpass`, `PT Sans Narrow`, `Raleway`, `Times New Roman`.
    - fieldname: size
      title: Size
      values: number
      min: 1
    - fieldname: color
      title: Color
      values: color
  - fieldname: visible
    title: Visible
    values: boolean
    description: A single toggle to hide the axis while preserving interaction like
      dragging. Default is true when a cheater plot is present on the axis, otherwise
      false
  - fieldname: color
    title: Color
    values: color
    default: '#444'
    description: 'Sets default for all colors associated with this axis all at once:
      line, font, tick, and grid colors. Grid color is lightened by blending this
      with the plot background Individual pieces can override this.'
  - fieldname: type
    title: Type
    values:
      - '-'
      - linear
      - log
      - date
      - category
    default: '-'
    description: Sets the axis type. By default, plotly attempts to determined the
      axis type by looking into the data of the traces that referenced the axis in
      question.
  - fieldname: autorange
    title: Automatic Range
    values:
      - 'true'
      - 'false'
      - reversed
    default: 'true'
    description: Determines whether or not the range of this axis is computed in relation
      to the input data. See `rangemode` for more info. If `range` is provided, then
      `autorange` is set to `false`.
  - fieldname: rangemode
    title: Rangemode
    values:
      - normal
      - tozero
      - nonnegative
    default: normal
    description: If `normal`, the range is computed in relation to the extrema of
      the input data. If `tozero``, the range extends to 0, regardless of the input
      data If `nonnegative`, the range is non-negative, regardless of the input data.
  - fieldname: range
    title: Range
    values: array
    description: Sets the range of this axis. If the axis `type` is `log`, then you
      must take the log of your desired range (e.g. to set the range from 1 to 100,
      set the range from 0 to 2). If the axis `type` is `date`, it should be date
      strings, like date data, though Date objects and unix milliseconds will be accepted
      and converted to strings. If the axis `type` is `category`, it should be numbers,
      using the scale where each category is assigned a serial number from zero in
      the order it appears. Each object has one or more of the keys listed below.
  - fieldname: fixedrange
    title: Fixed Range
    values: boolean
    description: Determines whether or not this axis is zoom-able. If true, then zoom
      is disabled.
  - fieldname: scaleanchor
    title: Scale Anchor
    values:
      - x
      - y
    description: 'If set to another axis id (e.g. `x2`, `y`), the range of this axis
      changes together with the range of the corresponding axis such that the scale
      of pixels per unit is in a constant ratio. Both axes are still zoomable, but
      when you zoom one, the other will zoom the same amount, keeping a fixed midpoint.
      `constrain` and `constraintoward` determine how we enforce the constraint. You
      can chain these, ie `yaxis: {scaleanchor: `x`}, xaxis2: {scaleanchor: `y`}`
      but you can only link axes of the same `type`. The linked axis can have the
      opposite letter (to constrain the aspect ratio) or the same letter (to match
      scales across subplots). Loops (`yaxis: {scaleanchor: `x`}, xaxis: {scaleanchor:
      `y`}` or longer) are redundant and the last constraint encountered will be ignored
      to avoid possible inconsistent constraints via `scaleratio`.'
  - fieldname: scaleratio
    title: Scale Ratio
    values: number
    min: 0
    default: 1
    description: If this axis is linked to another by `scaleanchor`, this determines
      the pixel to unit scale ratio. For example, if this value is 10, then every
      unit on this axis spans 10 times the number of pixels as a unit on the linked
      axis. Use this for example to create an elevation profile where the vertical
      scale is exaggerated a fixed amount with respect to the horizontal.
  - fieldname: constrain
    title: Constrain
    values:
      - range
      - domain
    default: range
    description: 'If this axis needs to be compressed (either due to its own `scaleanchor`
      and `scaleratio` or those of the other axis), determines how that happens: by
      increasing the `range` (default), or by decreasing the `domain`.'
  - fieldname: constraintoward
    title: Constrain Toward
    values:
      - left
      - center
      - right
      - top
      - middle
      - bottom
    description: If this axis needs to be compressed (either due to its own `scaleanchor`
      and `scaleratio` or those of the other axis), determines which direction we
      push the originally specified plot area. Options are `left`, `center` (default),
      and `right` for x axes, and `top`, `middle` (default), and `bottom` for y axes.
  - fieldname: tickmode
    title: Tick Mode
    values:
      - auto
      - linear
      - array
    description: Sets the tick mode for this axis. If `auto`, the number of ticks
      is set via `nticks`. If `linear`, the placement of the ticks is determined by
      a starting position `tick0` and a tick step `dtick` (`linear` is the default
      value if `tick0` and `dtick` are provided). If `array`, the placement of the
      ticks is set via `tickvals` and the tick text is `ticktext`. (`array` is the
      default value if `tickvals` is provided).
  - fieldname: nticks
    title: Maximum Number of Ticks
    values: integer
    min: 0
    default: 0
    description: Specifies the maximum number of ticks for the particular axis. The
      actual number of ticks will be chosen automatically to be less than or equal
      to `nticks`. Has an effect only if `tickmode` is set to `auto`.
  - fieldname: tick0
    title: First Tick Position
    values: number or categorical coordinate string
    description: Sets the placement of the first tick on this axis. Use with `dtick`.
      If the axis `type` is `log`, then you must take the log of your starting tick
      (e.g. to set the starting tick to 100, set the `tick0` to 2) except when `dtick`=`L&lt;f&gt;`
      (see `dtick` for more info). If the axis `type` is `date`, it should be a date
      string, like date data. If the axis `type` is `category`, it should be a number,
      using the scale where each category is assigned a serial number from zero in
      the order it appears.
  - fieldname: dtick
    title: Tick In-Between Step
    values: number or categorical coordinate string
    description: Sets the step in-between ticks on this axis. Use with `tick0`. Must
      be a positive number, or special strings available to `log` and `date` axes.
      If the axis `type` is `log`, then ticks are set every 10^(n`dtick) where n is
      the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set
      dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick
      marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433.
      `log` has several special values; `L&lt;f&gt;`, where `f` is a positive number,
      gives ticks linearly spaced in value (but not position). For example `tick0`
      = 0.1, `dtick` = `L0.5` will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers
      of 10 plus small digits between, use `D1` (all digits) or `D2` (only 2 and 5).
      `tick0` is ignored for `D1` and `D2`. If the axis `type` is `date`, then you
      must convert the time to milliseconds. For example, to set the interval between
      ticks to one day, set `dtick` to 86400000.0. `date` also has special values
      `M&lt;n&gt;` gives ticks spaced by a number of months. `n` must be a positive
      integer. To set ticks on the 15th of every third month, set `tick0` to `2000-01-15`
      and `dtick` to `M3`. To set ticks every 4 years, set `dtick` to `M48`
  - fieldname: tickvals
    title: Tick Values
    values: data array
    description: Sets the values at which ticks on this axis appear. Only has an effect
      if `tickmode` is set to `array`. Used with `ticktext`.
  - fieldname: ticktext
    title: Tick Text
    values: data array
    description: Sets the text displayed at the ticks position via `tickvals`. Only
      has an effect if `tickmode` is set to `array`. Used with `tickvals`.
  - fieldname: ticks
    title: Ticks
    values:
      - ''
      - outside
      - inside
    description: Determines whether ticks are drawn or not. If ``, this axis' ticks
      are not drawn. If `outside` (`inside`), this axis' are drawn outside (inside)
      the axis lines.
  - fieldname: mirror
    title: Mirror
    values:
      - 'true'
      - ticks
      - 'false'
      - all
      - allticks
    description: Determines if the axis lines or/and ticks are mirrored to the opposite
      side of the plotting area. If `true`, the axis lines are mirrored. If `ticks`,
      the axis lines and ticks are mirrored. If `false`, mirroring is disable. If
      `all`, axis lines are mirrored on all shared-axes subplots. If `allticks`, axis
      lines and ticks are mirrored on all shared-axes subplots.
  - fieldname: ticklen
    title: Tick Length
    values: number
    min: 0
    default: 5
    description: Sets the tick length (in px).
  - fieldname: tickwidth
    title: Tick Width
    values: number
    min: 0
    default: 1
    description: Sets the tick width (in px).
  - fieldname: tickcolor
    title: Tick Color
    values: color
    default: '#444'
    description: Sets the tick color.
  - fieldname: showticklabels
    title: Show Tick Labels
    values: boolean
    default: 'true'
    description: Determines whether or not the tick labels are drawn.
  - fieldname: showspikes
    title: Show Spikes
    values: boolean
    description: 'Determines whether or not spikes (aka droplines) are drawn for this
      axis. Note: This only takes affect when hovermode = closest'
  - fieldname: spikecolor
    title: Spike Color
    values: color
    description: Sets the spike color. If undefined, will use the series color
  - fieldname: spikethickness
    title: Spike Thickness
    values: number
    default: 3
    description: Sets the width (in px) of the zero line.
  - fieldname: spikedash
    title: Spike Dash Style
    values: string
    default: dash
    description: Sets the dash style of lines. Set to a dash type string (`solid`,
      `dot`, `dash`, `longdash`, `dashdot`, or `longdashdot`) or a dash length list
      in px (eg `5px,10px,2px,2px`).
  - fieldname: spikemode
    title: Spike Mode
    values:
      - toaxis
      - across
      - marker
      - toaxis+across
      - toaxis+marker
      - across+marker
      - toaxis+across_marker
    description: Determines the drawing mode for the spike line If `toaxis`, the line
      is drawn from the data point to the axis the series is plotted on. If `across`,
      the line is drawn across the entire plot area, and supercedes `toaxis`. If `marker`,
      then a marker dot is drawn on the axis the series is plotted on
    default: toaxis
  - fieldname: tickfont
    title: Tick Font
    description: Sets the tick font.
    subfields:
    - fieldname: family
      title: Family
      values: string
      description: HTML font family - the typeface that will be applied by the web
        browser. The web browser will only be able to apply a font if it is available
        on the system which it operates. Provide multiple font families, separated
        by commas, to indicate the preference in which to apply fonts if they aren't
        available on the system. The plotly service (at https://plot.ly or on-premise)
        generates images on a server, where only a select number of fonts are installed
        and supported. These include `Arial`, `Balto`, `Courier New`, `Droid Sans`,,
        `Droid Serif`, `Droid Sans Mono`, `Gravitas One`, `Old Standard TT`, `Open
        Sans`, `Overpass`, `PT Sans Narrow`, `Raleway`, `Times New Roman`.
    - fieldname: size
      title: Size
      values: number
      min: 1
    - fieldname: color
      title: Color
      values: color
  - fieldname: tickangle
    title: Tick Angle
    values: angle
    default: auto
    description: Sets the angle of the tick labels with respect to the horizontal.
      For example, a `tickangle` of -90 draws the tick labels vertically.
  - fieldname: tickprefix
    title: Tick Prefix
    values: string
    default: ''
    description: Sets a tick label prefix.
  - fieldname: showtickprefix
    title: Show Tick Prefix
    values:
      - all
      - first
      - last
      - none
    default: all
    description: If `all`, all tick labels are displayed with a prefix. If `first`,
      only the first tick is displayed with a prefix. If `last`, only the last tick
      is displayed with a suffix. If `none`, tick prefixes are hidden.
  - fieldname: ticksuffix
    title: Tick Suffix
    values: string
    default: ''
    description: Sets a tick label suffix.
  - fieldname: showticksuffix
    title: Show Tick Suffix
    values:
      - all
      - first
      - last
      - none
    default: all
    description: Same as `showtickprefix` but for tick suffixes.
  - fieldname: showexponent
    title: Show Exponent
    values:
      - all
      - first
      - last
      - none
    default: all
    description: If `all`, all exponents are shown besides their significands. If
      `first`, only the exponent of the first tick is shown. If `last`, only the exponent
      of the last tick is shown. If `none`, no exponents appear.
  - fieldname: exponentformat
    title: Exponent Format
    values:
      none: '1,000,000,000'
      e: '1e+9'
      E: '1E+9'
      power: '1x10^9'
      SI: '1G'
      B: '1B'
    default: B
    description: Determines a formatting rule for the tick exponents. The dropdown
      shows formatting for the number 1,000,000,000.
  - fieldname: separatethousands
    title: Separate Thousands
    values: boolean
    description: If `true`, even 4-digit integers are separated
  - fieldname: tickformat
    title: Tick Format
    values: string
    default: ''
    description: 'Sets the tick label formatting rule using d3 formatting mini-languages
      which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format
      And for dates see: https://github.com/d3/d3-time-format/blob/master/README.md#locale_format
      We add one item to d3''s date formatter: `%{n}f` for fractional seconds with
      n digits. For example, `2016-10-13 09:15:23.456` with tickformat `%H~%M~%S.%2f`
      would display `09~15~23.46`'
  - fieldname: hoverformat
    title: Hover Format
    values: string
    default: ''
    description: 'Sets the hover text formatting rule using d3 formatting mini-languages
      which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format
      And for dates see: https://github.com/d3/d3-time-format/blob/master/README.md#locale_format
      We add one item to d3''s date formatter: `%{n}f` for fractional seconds with
      n digits. For example, `2016-10-13 09:15:23.456` with tickformat `%H~%M~%S.%2f`
      would display `09~15~23.46`'
  - fieldname: showline
    title: Show Bounding Line
    values: boolean
    description: Determines whether or not a line bounding this axis is drawn.
  - fieldname: linecolor
    title: Line Color
    values: color
    default: '#444'
    description: Sets the axis line color.
  - fieldname: linewidth
    title: Linewidth
    values: number
    min: 0
    default: 1
    description: Sets the width (in px) of the axis line.
  - fieldname: showgrid
    title: Show Grid Lines
    values: boolean
    description: Determines whether or not grid lines are drawn. If `true`, the grid
      lines are drawn at every tick mark.
  - fieldname: gridcolor
    title: Grid Color
    values: color
    default: '#eee'
    description: Sets the color of the grid lines.
  - fieldname: gridwidth
    title: Grid Width
    values: number
    min: 0
    default: 1
    description: Sets the width (in px) of the grid lines.
  - fieldname: zeroline
    title: Line at Zero Value
    values: boolean
    description: Determines whether or not a line is drawn at along the 0 value of
      this axis. If `true`, the zero line is drawn on top of the grid lines.
  - fieldname: zerolinecolor
    title: Line at Zero Color
    values: color
    default: '#444'
    description: Sets the line color of the zero line.
  - fieldname: zerolinewidth
    title: Line at Zero Width
    values: number
    default: 1
    description: Sets the width (in px) of the zero line.
  - fieldname: anchor
    title: Anchor
    values:
      - free
      - y
    description: If set to an opposite-letter axis id (e.g. `x2`, `y`), this axis
      is bound to the corresponding opposite-letter axis. If set to `free`, this axis'
      position is determined by `position`.
  - fieldname: side
    title: Axis Side
    values:
      - top
      - bottom
      - left
      - right
    description: Determines whether a x (y) axis is positioned at the `bottom` (`left`)
      or `top` (`right`) of the plotting area.
  - fieldname: overlaying
    title: Overlaying
    values:
      - free
      - y
    description: If set a same-letter axis id, this axis is overlaid on top of the
      corresponding same-letter axis. If `false`, this axis does not overlay any same-letter
      axes.
  - fieldname: layer
    title: Layer
    values:
      - above traces
      - below traces
    default: above traces
    description: Sets the layer on which this axis is displayed. If `above traces`,
      this axis is displayed above all the subplot's traces If `below traces`, this
      axis is displayed below all the subplot's traces, but above the grid lines.
      Useful when used together with scatter-like traces with `cliponaxis` set to
      `false` to show markers and/or text nodes above this axis.
  - fieldname: domain
    title: Domain
    values: array
    default: '0, 1'
    description: Sets the domain of this axis (in plot fraction). Each object has
      one or more of the keys listed below.
  - fieldname: position
    title: Position
    values: number
    min: 0
    max: 1
    default: 0
    description: Sets the position of this axis in the plotting space (in normalized
      coordinates). Only has an effect if `anchor` is set to `free`.
  - fieldname: categoryorder
    title: Axis Category Order
    values:
      - trace
      - category ascending
      - category descending
      - array
    default: trace
    description: Specifies the ordering logic for the case of categorical variables.
      By default, plotly uses `trace`, which specifies the order that is present in
      the data supplied. Set `categoryorder` to `category ascending` or `category
      descending` if order should be determined by the alphanumerical order of the
      category names. Set `categoryorder` to `array` to derive the ordering from the
      attribute `categoryarray`. If a category is not found in the `categoryarray`
      array, the sorting behavior for that attribute will be identical to the `trace`
      mode. The unspecified categories will follow the categories in `categoryarray`.
  - fieldname: categoryarray
    title: Axis Category Array
    values: data array
    description: Sets the order in which categories on this axis appear. Only has
      an effect if `categoryorder` is set to `array`. Used with `categoryorder`.
  - fieldname: calendar
    title: Calendar
    values:
      gregorian: Gregorian
      chinese: Chinese
      coptic: Coptic
      discworld: Discworld
      ethiopian: Ethiopian
      hebrew: Hebrew
      islamic: Islamic
      julian: Julian
      mayan: Mayan
      nanakshahi: Nanakshahi
      nepali: Nepali
      persian: Old Persian
      jalali: Jalali
      taiwan: Minguo
      thai: Thai
      ummalqura: Umm al-Qura
    default: gregorian
    description: Sets the calendar system to use for `range` and `tick0` if this is
      a date axis. This does not set the calendar for interpreting data on this axis,
      that's specified in the trace or via the global `layout.calendar`
  - fieldname: tickvalssrc
  - fieldname: ticktextsrc
  - fieldname: categoryarraysrc
- fieldname: autosize
  title: Autosize
  values: boolean
  description: Determines whether or not a layout width or height that has been left
    undefined by the user is initialized on each relayout. Note that, regardless of
    this attribute, an undefined layout width or height is always initialized on the
    first call to plot.
- fieldname: width
  title: Width
  values: number
  min: 10
  default: 700
  description: Sets the plot's width (in px).
- fieldname: height
  title: Height
  values: number
  min: 10
  default: 450
  description: Sets the plot's height (in px).
- fieldname: margin
  title: Margin
  subfields:
  - fieldname: l
    title: Left
    values: number
    min: 0
    default: 80
    description: Sets the left margin (in px).
  - fieldname: r
    title: Right
    values: number
    min: 0
    default: 80
    description: Sets the right margin (in px).
  - fieldname: t
    title: Top
    values: number
    min: 0
    default: 100
    description: Sets the top margin (in px).
  - fieldname: b
    title: Bottom
    values: number
    min: 0
    default: 80
    description: Sets the bottom margin (in px).
  - fieldname: pad
    title: Padding
    values: number
    min: 0
    default: 0
    description: Sets the amount of padding (in px) between the plotting area and
      the axis lines
  - fieldname: autoexpand
    title: Automatically Expand
    values: boolean
    default: 'true'
- fieldname: paper_bgcolor
  title: Paper Background Color
  values: color
  default: '#fff'
  description: Sets the color of paper where the graph is drawn.
- fieldname: plot_bgcolor
  title: Plot Background Color
  values: color
  default: '#fff'
  description: Sets the color of plotting area in-between x and y axes.
- fieldname: separators
  title: Separators
  values: string
  default: '.,'
  description: Sets the decimal and thousand separators. For example, `. ` puts a
    '.' before decimals and a space between thousands.
- fieldname: hidesources
  title: Hide Sources
  values: boolean
  description: Determines whether or not a text link citing the data source is placed
    at the bottom-right cored of the figure. Has only an effect only on graphs that
    have been generated via forked graphs from the plotly service (at https://plot.ly
    or on-premise).
- fieldname: showlegend
  title: Show Legend
  values: boolean
  description: Determines whether or not a legend is drawn.
- fieldname: ternary
  title: Ternary
  description: Used only for series type `Ternary Scatter Plot`
  subfields:
  - fieldname: domain
    title: Domain
    subfields:
    - fieldname: x
      title: X
      values: array
      default: '0, 1'
      description: Sets the horizontal domain of this subplot (in plot fraction).
        Each object has one or more of the keys listed below.
    - fieldname: y
      title: Y
      values: array
      default: '0, 1'
      description: Sets the vertical domain of this subplot (in plot fraction). Each
        object has one or more of the keys listed below.
  - fieldname: bgcolor
    title: Background Color
    values: color
    default: '#fff'
    description: Set the background color of the subplot
  - fieldname: sum
    title: Sum
    values: number
    min: 0
    default: 1
    description: The number each triplet should sum to, and the maximum range of each
      axis
  - fieldname: aaxis
    title: A Axis
    subfields:
    - fieldname: title
      title: Title
      values: string
      description: Sets the title of this axis.
    - fieldname: titlefont
      title: Title Font
      description: Sets this axis' title font.
      subfields:
      - fieldname: family
        title: Family
        values: string
        description: HTML font family - the typeface that will be applied by the web
          browser. The web browser will only be able to apply a font if it is available
          on the system which it operates. Provide multiple font families, separated
          by commas, to indicate the preference in which to apply fonts if they aren't
          available on the system. The plotly service (at https://plot.ly or on-premise)
          generates images on a server, where only a select number of fonts are installed
          and supported. These include `Arial`, `Balto`, `Courier New`, `Droid Sans`,,
          `Droid Serif`, `Droid Sans Mono`, `Gravitas One`, `Old Standard TT`, `Open
          Sans`, `Overpass`, `PT Sans Narrow`, `Raleway`, `Times New Roman`.
      - fieldname: size
        title: Size
        values: number
        min: 1
      - fieldname: color
        title: Color
        values: color
    - fieldname: color
      title: Color
      values: color
      default: '#444'
      description: 'Sets default for all colors associated with this axis all at once:
        line, font, tick, and grid colors. Grid color is lightened by blending this
        with the plot background Individual pieces can override this.'
    - fieldname: tickmode
      title: Tick Mode
      values:
        - auto
        - linear
        - array
      description: Sets the tick mode for this axis. If `auto`, the number of ticks
        is set via `nticks`. If `linear`, the placement of the ticks is determined
        by a starting position `tick0` and a tick step `dtick` (`linear` is the default
        value if `tick0` and `dtick` are provided). If `array`, the placement of the
        ticks is set via `tickvals` and the tick text is `ticktext`. (`array` is the
        default value if `tickvals` is provided).
    - fieldname: nticks
      title: Maximum Number of Ticks
      values: integer
      min: 1
      default: 6
      description: Specifies the maximum number of ticks for the particular axis.
        The actual number of ticks will be chosen automatically to be less than or
        equal to `nticks`. Has an effect only if `tickmode` is set to `auto`.
    - fieldname: tick0
      title: First Tick Position
      values: number or categorical coordinate string
      description: Sets the placement of the first tick on this axis. Use with `dtick`.
        If the axis `type` is `log`, then you must take the log of your starting tick
        (e.g. to set the starting tick to 100, set the `tick0` to 2) except when `dtick`=`L&lt;f&gt;`
        (see `dtick` for more info). If the axis `type` is `date`, it should be a
        date string, like date data. If the axis `type` is `category`, it should be
        a number, using the scale where each category is assigned a serial number
        from zero in the order it appears.
    - fieldname: dtick
      title: Tick In-Between Step
      values: number or categorical coordinate string
      description: Sets the step in-between ticks on this axis. Use with `tick0`.
        Must be a positive number, or special strings available to `log` and `date`
        axes. If the axis `type` is `log`, then ticks are set every 10^(n`dtick) where
        n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000,
        ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2.
        To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5),
        or 0.69897000433. `log` has several special values; `L&lt;f&gt;`, where `f`
        is a positive number, gives ticks linearly spaced in value (but not position).
        For example `tick0` = 0.1, `dtick` = `L0.5` will put ticks at 0.1, 0.6, 1.1,
        1.6 etc. To show powers of 10 plus small digits between, use `D1` (all digits)
        or `D2` (only 2 and 5). `tick0` is ignored for `D1` and `D2`. If the axis
        `type` is `date`, then you must convert the time to milliseconds. For example,
        to set the interval between ticks to one day, set `dtick` to 86400000.0. `date`
        also has special values `M&lt;n&gt;` gives ticks spaced by a number of months.
        `n` must be a positive integer. To set ticks on the 15th of every third month,
        set `tick0` to `2000-01-15` and `dtick` to `M3`. To set ticks every 4 years,
        set `dtick` to `M48`
    - fieldname: tickvals
      title: Tick Values
      values: data array
      description: Sets the values at which ticks on this axis appear. Only has an
        effect if `tickmode` is set to `array`. Used with `ticktext`.
    - fieldname: ticktext
      title: Tick Text
      values: data array
      description: Sets the text displayed at the ticks position via `tickvals`. Only
        has an effect if `tickmode` is set to `array`. Used with `tickvals`.
    - fieldname: ticks
      title: Ticks
      values:
        - ''
        - outside
        - inside
      description: Determines whether ticks are drawn or not. If ``, this axis' ticks
        are not drawn. If `outside` (`inside`), this axis' are drawn outside (inside)
        the axis lines.
    - fieldname: ticklen
      title: Tick Length
      values: number
      min: 0
      default: 5
      description: Sets the tick length (in px).
    - fieldname: tickwidth
      title: Tick Width
      values: number
      min: 0
      default: 1
      description: Sets the tick width (in px).
    - fieldname: tickcolor
      title: Tick Color
      values: color
      default: '#444'
      description: Sets the tick color.
    - fieldname: showticklabels
      title: Show Tick Labels
      values: boolean
      default: 'true'
      description: Determines whether or not the tick labels are drawn.
    - fieldname: showtickprefix
      title: Show Tick Prefix
      values:
        - all
        - first
        - last
        - none
      default: all
      description: If `all`, all tick labels are displayed with a prefix. If `first`,
        only the first tick is displayed with a prefix. If `last`, only the last tick
        is displayed with a suffix. If `none`, tick prefixes are hidden.
    - fieldname: tickprefix
      title: Tick Prefix
      values: string
      default: ''
      description: Sets a tick label prefix.
    - fieldname: showticksuffix
      title: Show Tick Suffix
      values:
        - all
        - first
        - last
        - none
      default: all
      description: Same as `showtickprefix` but for tick suffixes.
    - fieldname: ticksuffix
      title: Tick Suffix
      values: string
      default: ''
      description: Sets a tick label suffix.
    - fieldname: showexponent
      title: Show Exponent
      values:
        - all
        - first
        - last
        - none
      default: all
      description: If `all`, all exponents are shown besides their significands. If
        `first`, only the exponent of the first tick is shown. If `last`, only the
        exponent of the last tick is shown. If `none`, no exponents appear.
    - fieldname: exponentformat
      title: Exponent Format
      values:
        none: '1,000,000,000'
        e: '1e+9'
        E: '1E+9'
        power: '1x10^9'
        SI: '1G'
        B: '1B'
      default: B
      description: Determines a formatting rule for the tick exponents. The dropdown
        shows formatting for the number 1,000,000,000.
    - fieldname: separatethousands
      title: Separate Thousands
      values: boolean
      description: If `true`, even 4-digit integers are separated
    - fieldname: tickfont
      title: Tick Font
      description: Sets the tick font.
      subfields:
      - fieldname: family
        title: Family
        values: string
        description: HTML font family - the typeface that will be applied by the web
          browser. The web browser will only be able to apply a font if it is available
          on the system which it operates. Provide multiple font families, separated
          by commas, to indicate the preference in which to apply fonts if they aren't
          available on the system. The plotly service (at https://plot.ly or on-premise)
          generates images on a server, where only a select number of fonts are installed
          and supported. These include `Arial`, `Balto`, `Courier New`, `Droid Sans`,,
          `Droid Serif`, `Droid Sans Mono`, `Gravitas One`, `Old Standard TT`, `Open
          Sans`, `Overpass`, `PT Sans Narrow`, `Raleway`, `Times New Roman`.
      - fieldname: size
        title: Size
        values: number
        min: 1
      - fieldname: color
        title: Color
        values: color
    - fieldname: tickangle
      title: Tick Angle
      values: angle
      default: auto
      description: Sets the angle of the tick labels with respect to the horizontal.
        For example, a `tickangle` of -90 draws the tick labels vertically.
    - fieldname: tickformat
      title: Tick Format
      values: string
      default: ''
      description: 'Sets the tick label formatting rule using d3 formatting mini-languages
        which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format
        And for dates see: https://github.com/d3/d3-time-format/blob/master/README.md#locale_format
        We add one item to d3''s date formatter: `%{n}f` for fractional seconds with
        n digits. For example, `2016-10-13 09:15:23.456` with tickformat `%H~%M~%S.%2f`
        would display `09~15~23.46`'
    - fieldname: hoverformat
      title: Hover Format
      values: string
      default: ''
      description: 'Sets the hover text formatting rule using d3 formatting mini-languages
        which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format
        And for dates see: https://github.com/d3/d3-time-format/blob/master/README.md#locale_format
        We add one item to d3''s date formatter: `%{n}f` for fractional seconds with
        n digits. For example, `2016-10-13 09:15:23.456` with tickformat `%H~%M~%S.%2f`
        would display `09~15~23.46`'
    - fieldname: showline
      title: Show Bounding Line
      values: boolean
      default: 'true'
      description: Determines whether or not a line bounding this axis is drawn.
    - fieldname: linecolor
      title: Line Color
      values: color
      default: '#444'
      description: Sets the axis line color.
    - fieldname: linewidth
      title: Linewidth
      values: number
      min: 0
      default: 1
      description: Sets the width (in px) of the axis line.
    - fieldname: showgrid
      title: Show Grid Lines
      values: boolean
      default: 'true'
      description: Determines whether or not grid lines are drawn. If `true`, the
        grid lines are drawn at every tick mark.
    - fieldname: gridcolor
      title: Grid Color
      values: color
      default: '#eee'
      description: Sets the color of the grid lines.
    - fieldname: gridwidth
      title: Grid Width
      values: number
      min: 0
      default: 1
      description: Sets the width (in px) of the grid lines.
    - fieldname: layer
      title: Layer
      values:
        - above traces
        - below traces
      default: above traces
      description: Sets the layer on which this axis is displayed. If `above traces`,
        this axis is displayed above all the subplot's traces If `below traces`, this
        axis is displayed below all the subplot's traces, but above the grid lines.
        Useful when used together with scatter-like traces with `cliponaxis` set to
        `false` to show markers and/or text nodes above this axis.
    - fieldname: tickvalssrc
    - fieldname: ticktextsrc
  - fieldname: baxis
    title: B Axis
    subfields:
    - fieldname: title
      title: Title
      values: string
      description: Sets the title of this axis.
    - fieldname: titlefont
      title: Title Font
      description: Sets this axis' title font.
      subfields:
      - fieldname: family
        title: Family
        values: string
        description: HTML font family - the typeface that will be applied by the web
          browser. The web browser will only be able to apply a font if it is available
          on the system which it operates. Provide multiple font families, separated
          by commas, to indicate the preference in which to apply fonts if they aren't
          available on the system. The plotly service (at https://plot.ly or on-premise)
          generates images on a server, where only a select number of fonts are installed
          and supported. These include `Arial`, `Balto`, `Courier New`, `Droid Sans`,,
          `Droid Serif`, `Droid Sans Mono`, `Gravitas One`, `Old Standard TT`, `Open
          Sans`, `Overpass`, `PT Sans Narrow`, `Raleway`, `Times New Roman`.
      - fieldname: size
        title: Size
        values: number
        min: 1
      - fieldname: color
        title: Color
        values: color
    - fieldname: color
      title: Color
      values: color
      default: '#444'
      description: 'Sets default for all colors associated with this axis all at once:
        line, font, tick, and grid colors. Grid color is lightened by blending this
        with the plot background Individual pieces can override this.'
    - fieldname: tickmode
      title: Tick Mode
      values:
        - auto
        - linear
        - array
      description: Sets the tick mode for this axis. If `auto`, the number of ticks
        is set via `nticks`. If `linear`, the placement of the ticks is determined
        by a starting position `tick0` and a tick step `dtick` (`linear` is the default
        value if `tick0` and `dtick` are provided). If `array`, the placement of the
        ticks is set via `tickvals` and the tick text is `ticktext`. (`array` is the
        default value if `tickvals` is provided).
    - fieldname: nticks
      title: Maximum Number of Ticks
      values: integer
      min: 1
      default: 6
      description: Specifies the maximum number of ticks for the particular axis.
        The actual number of ticks will be chosen automatically to be less than or
        equal to `nticks`. Has an effect only if `tickmode` is set to `auto`.
    - fieldname: tick0
      title: First Tick Position
      values: number or categorical coordinate string
      description: Sets the placement of the first tick on this axis. Use with `dtick`.
        If the axis `type` is `log`, then you must take the log of your starting tick
        (e.g. to set the starting tick to 100, set the `tick0` to 2) except when `dtick`=`L&lt;f&gt;`
        (see `dtick` for more info). If the axis `type` is `date`, it should be a
        date string, like date data. If the axis `type` is `category`, it should be
        a number, using the scale where each category is assigned a serial number
        from zero in the order it appears.
    - fieldname: dtick
      title: Tick In-Between Step
      values: number or categorical coordinate string
      description: Sets the step in-between ticks on this axis. Use with `tick0`.
        Must be a positive number, or special strings available to `log` and `date`
        axes. If the axis `type` is `log`, then ticks are set every 10^(n`dtick) where
        n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000,
        ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2.
        To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5),
        or 0.69897000433. `log` has several special values; `L&lt;f&gt;`, where `f`
        is a positive number, gives ticks linearly spaced in value (but not position).
        For example `tick0` = 0.1, `dtick` = `L0.5` will put ticks at 0.1, 0.6, 1.1,
        1.6 etc. To show powers of 10 plus small digits between, use `D1` (all digits)
        or `D2` (only 2 and 5). `tick0` is ignored for `D1` and `D2`. If the axis
        `type` is `date`, then you must convert the time to milliseconds. For example,
        to set the interval between ticks to one day, set `dtick` to 86400000.0. `date`
        also has special values `M&lt;n&gt;` gives ticks spaced by a number of months.
        `n` must be a positive integer. To set ticks on the 15th of every third month,
        set `tick0` to `2000-01-15` and `dtick` to `M3`. To set ticks every 4 years,
        set `dtick` to `M48`
    - fieldname: tickvals
      title: Tick Values
      values: data array
      description: Sets the values at which ticks on this axis appear. Only has an
        effect if `tickmode` is set to `array`. Used with `ticktext`.
    - fieldname: ticktext
      title: Tick Text
      values: data array
      description: Sets the text displayed at the ticks position via `tickvals`. Only
        has an effect if `tickmode` is set to `array`. Used with `tickvals`.
    - fieldname: ticks
      title: Ticks
      values:
        - ''
        - outside
        - inside
      description: Determines whether ticks are drawn or not. If ``, this axis' ticks
        are not drawn. If `outside` (`inside`), this axis' are drawn outside (inside)
        the axis lines.
    - fieldname: ticklen
      title: Tick Length
      values: number
      min: 0
      default: 5
      description: Sets the tick length (in px).
    - fieldname: tickwidth
      title: Tick Width
      values: number
      min: 0
      default: 1
      description: Sets the tick width (in px).
    - fieldname: tickcolor
      title: Tick Color
      values: color
      default: '#444'
      description: Sets the tick color.
    - fieldname: showticklabels
      title: Show Tick Labels
      values: boolean
      default: 'true'
      description: Determines whether or not the tick labels are drawn.
    - fieldname: showtickprefix
      title: Show Tick Prefix
      values:
        - all
        - first
        - last
        - none
      default: all
      description: If `all`, all tick labels are displayed with a prefix. If `first`,
        only the first tick is displayed with a prefix. If `last`, only the last tick
        is displayed with a suffix. If `none`, tick prefixes are hidden.
    - fieldname: tickprefix
      title: Tick Prefix
      values: string
      default: ''
      description: Sets a tick label prefix.
    - fieldname: showticksuffix
      title: Show Tick Suffix
      values:
        - all
        - first
        - last
        - none
      default: all
      description: Same as `showtickprefix` but for tick suffixes.
    - fieldname: ticksuffix
      title: Tick Suffix
      values: string
      default: ''
      description: Sets a tick label suffix.
    - fieldname: showexponent
      title: Show Exponent
      values:
        - all
        - first
        - last
        - none
      default: all
      description: If `all`, all exponents are shown besides their significands. If
        `first`, only the exponent of the first tick is shown. If `last`, only the
        exponent of the last tick is shown. If `none`, no exponents appear.
    - fieldname: exponentformat
      title: Exponent Format
      values:
        none: '1,000,000,000'
        e: '1e+9'
        E: '1E+9'
        power: '1x10^9'
        SI: '1G'
        B: '1B'
      default: B
      description: Determines a formatting rule for the tick exponents. The dropdown
        shows formatting for the number 1,000,000,000.
    - fieldname: separatethousands
      title: Separate Thousands
      values: boolean
      description: If `true`, even 4-digit integers are separated
    - fieldname: tickfont
      title: Tick Font
      description: Sets the tick font.
      subfields:
      - fieldname: family
        title: Family
        values: string
        description: HTML font family - the typeface that will be applied by the web
          browser. The web browser will only be able to apply a font if it is available
          on the system which it operates. Provide multiple font families, separated
          by commas, to indicate the preference in which to apply fonts if they aren't
          available on the system. The plotly service (at https://plot.ly or on-premise)
          generates images on a server, where only a select number of fonts are installed
          and supported. These include `Arial`, `Balto`, `Courier New`, `Droid Sans`,,
          `Droid Serif`, `Droid Sans Mono`, `Gravitas One`, `Old Standard TT`, `Open
          Sans`, `Overpass`, `PT Sans Narrow`, `Raleway`, `Times New Roman`.
      - fieldname: size
        title: Size
        values: number
        min: 1
      - fieldname: color
        title: Color
        values: color
    - fieldname: tickangle
      title: Tick Angle
      values: angle
      default: auto
      description: Sets the angle of the tick labels with respect to the horizontal.
        For example, a `tickangle` of -90 draws the tick labels vertically.
    - fieldname: tickformat
      title: Tick Format
      values: string
      default: ''
      description: 'Sets the tick label formatting rule using d3 formatting mini-languages
        which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format
        And for dates see: https://github.com/d3/d3-time-format/blob/master/README.md#locale_format
        We add one item to d3''s date formatter: `%{n}f` for fractional seconds with
        n digits. For example, `2016-10-13 09:15:23.456` with tickformat `%H~%M~%S.%2f`
        would display `09~15~23.46`'
    - fieldname: hoverformat
      title: Hover Format
      values: string
      default: ''
      description: 'Sets the hover text formatting rule using d3 formatting mini-languages
        which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format
        And for dates see: https://github.com/d3/d3-time-format/blob/master/README.md#locale_format
        We add one item to d3''s date formatter: `%{n}f` for fractional seconds with
        n digits. For example, `2016-10-13 09:15:23.456` with tickformat `%H~%M~%S.%2f`
        would display `09~15~23.46`'
    - fieldname: showline
      title: Show Bounding Line
      values: boolean
      default: 'true'
      description: Determines whether or not a line bounding this axis is drawn.
    - fieldname: linecolor
      title: Line Color
      values: color
      default: '#444'
      description: Sets the axis line color.
    - fieldname: linewidth
      title: Linewidth
      values: number
      min: 0
      default: 1
      description: Sets the width (in px) of the axis line.
    - fieldname: showgrid
      title: Show Grid Lines
      values: boolean
      default: 'true'
      description: Determines whether or not grid lines are drawn. If `true`, the
        grid lines are drawn at every tick mark.
    - fieldname: gridcolor
      title: Grid Color
      values: color
      default: '#eee'
      description: Sets the color of the grid lines.
    - fieldname: gridwidth
      title: Grid Width
      values: number
      min: 0
      default: 1
      description: Sets the width (in px) of the grid lines.
    - fieldname: layer
      title: Layer
      values:
        - above traces
        - below traces
      default: above traces
      description: Sets the layer on which this axis is displayed. If `above traces`,
        this axis is displayed above all the subplot's traces If `below traces`, this
        axis is displayed below all the subplot's traces, but above the grid lines.
        Useful when used together with scatter-like traces with `cliponaxis` set to
        `false` to show markers and/or text nodes above this axis.
    - fieldname: tickvalssrc
    - fieldname: ticktextsrc
  - fieldname: caxis
    title: C Axis
    subfields:
    - fieldname: title
      title: Title
      values: string
      description: Sets the title of this axis.
    - fieldname: titlefont
      title: Title Font
      description: Sets this axis' title font.
      subfields:
      - fieldname: family
        title: Family
        values: string
        description: HTML font family - the typeface that will be applied by the web
          browser. The web browser will only be able to apply a font if it is available
          on the system which it operates. Provide multiple font families, separated
          by commas, to indicate the preference in which to apply fonts if they aren't
          available on the system. The plotly service (at https://plot.ly or on-premise)
          generates images on a server, where only a select number of fonts are installed
          and supported. These include `Arial`, `Balto`, `Courier New`, `Droid Sans`,,
          `Droid Serif`, `Droid Sans Mono`, `Gravitas One`, `Old Standard TT`, `Open
          Sans`, `Overpass`, `PT Sans Narrow`, `Raleway`, `Times New Roman`.
      - fieldname: size
        title: Size
        values: number
        min: 1
      - fieldname: color
        title: Color
        values: color
    - fieldname: color
      title: Color
      values: color
      default: '#444'
      description: 'Sets default for all colors associated with this axis all at once:
        line, font, tick, and grid colors. Grid color is lightened by blending this
        with the plot background Individual pieces can override this.'
    - fieldname: tickmode
      title: Tick Mode
      values:
        - auto
        - linear
        - array
      description: Sets the tick mode for this axis. If `auto`, the number of ticks
        is set via `nticks`. If `linear`, the placement of the ticks is determined
        by a starting position `tick0` and a tick step `dtick` (`linear` is the default
        value if `tick0` and `dtick` are provided). If `array`, the placement of the
        ticks is set via `tickvals` and the tick text is `ticktext`. (`array` is the
        default value if `tickvals` is provided).
    - fieldname: nticks
      title: Maximum Number of Ticks
      values: integer
      min: 1
      default: 6
      description: Specifies the maximum number of ticks for the particular axis.
        The actual number of ticks will be chosen automatically to be less than or
        equal to `nticks`. Has an effect only if `tickmode` is set to `auto`.
    - fieldname: tick0
      title: First Tick Position
      values: number or categorical coordinate string
      description: Sets the placement of the first tick on this axis. Use with `dtick`.
        If the axis `type` is `log`, then you must take the log of your starting tick
        (e.g. to set the starting tick to 100, set the `tick0` to 2) except when `dtick`=`L&lt;f&gt;`
        (see `dtick` for more info). If the axis `type` is `date`, it should be a
        date string, like date data. If the axis `type` is `category`, it should be
        a number, using the scale where each category is assigned a serial number
        from zero in the order it appears.
    - fieldname: dtick
      title: Tick In-Between Step
      values: number or categorical coordinate string
      description: Sets the step in-between ticks on this axis. Use with `tick0`.
        Must be a positive number, or special strings available to `log` and `date`
        axes. If the axis `type` is `log`, then ticks are set every 10^(n`dtick) where
        n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000,
        ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2.
        To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5),
        or 0.69897000433. `log` has several special values; `L&lt;f&gt;`, where `f`
        is a positive number, gives ticks linearly spaced in value (but not position).
        For example `tick0` = 0.1, `dtick` = `L0.5` will put ticks at 0.1, 0.6, 1.1,
        1.6 etc. To show powers of 10 plus small digits between, use `D1` (all digits)
        or `D2` (only 2 and 5). `tick0` is ignored for `D1` and `D2`. If the axis
        `type` is `date`, then you must convert the time to milliseconds. For example,
        to set the interval between ticks to one day, set `dtick` to 86400000.0. `date`
        also has special values `M&lt;n&gt;` gives ticks spaced by a number of months.
        `n` must be a positive integer. To set ticks on the 15th of every third month,
        set `tick0` to `2000-01-15` and `dtick` to `M3`. To set ticks every 4 years,
        set `dtick` to `M48`
    - fieldname: tickvals
      title: Tick Values
      values: data array
      description: Sets the values at which ticks on this axis appear. Only has an
        effect if `tickmode` is set to `array`. Used with `ticktext`.
    - fieldname: ticktext
      title: Tick Text
      values: data array
      description: Sets the text displayed at the ticks position via `tickvals`. Only
        has an effect if `tickmode` is set to `array`. Used with `tickvals`.
    - fieldname: ticks
      title: Ticks
      values:
        - ''
        - outside
        - inside
      description: Determines whether ticks are drawn or not. If ``, this axis' ticks
        are not drawn. If `outside` (`inside`), this axis' are drawn outside (inside)
        the axis lines.
    - fieldname: ticklen
      title: Tick Length
      values: number
      min: 0
      default: 5
      description: Sets the tick length (in px).
    - fieldname: tickwidth
      title: Tick Width
      values: number
      min: 0
      default: 1
      description: Sets the tick width (in px).
    - fieldname: tickcolor
      title: Tick Color
      values: color
      default: '#444'
      description: Sets the tick color.
    - fieldname: showticklabels
      title: Show Tick Labels
      values: boolean
      default: 'true'
      description: Determines whether or not the tick labels are drawn.
    - fieldname: showtickprefix
      title: Show Tick Prefix
      values:
        - all
        - first
        - last
        - none
      default: all
      description: If `all`, all tick labels are displayed with a prefix. If `first`,
        only the first tick is displayed with a prefix. If `last`, only the last tick
        is displayed with a suffix. If `none`, tick prefixes are hidden.
    - fieldname: tickprefix
      title: Tick Prefix
      values: string
      default: ''
      description: Sets a tick label prefix.
    - fieldname: showticksuffix
      title: Show Tick Suffix
      values:
        - all
        - first
        - last
        - none
      default: all
      description: Same as `showtickprefix` but for tick suffixes.
    - fieldname: ticksuffix
      title: Tick Suffix
      values: string
      default: ''
      description: Sets a tick label suffix.
    - fieldname: showexponent
      title: Show Exponent
      values:
        - all
        - first
        - last
        - none
      default: all
      description: If `all`, all exponents are shown besides their significands. If
        `first`, only the exponent of the first tick is shown. If `last`, only the
        exponent of the last tick is shown. If `none`, no exponents appear.
    - fieldname: exponentformat
      title: Exponent Format
      values:
        none: '1,000,000,000'
        e: '1e+9'
        E: '1E+9'
        power: '1x10^9'
        SI: '1G'
        B: '1B'
      default: B
      description: Determines a formatting rule for the tick exponents. The dropdown
        shows formatting for the number 1,000,000,000.
    - fieldname: separatethousands
      title: Separate Thousands
      values: boolean
      description: If `true`, even 4-digit integers are separated
    - fieldname: tickfont
      title: Tick Font
      description: Sets the tick font.
      subfields:
      - fieldname: family
        title: Family
        values: string
        description: HTML font family - the typeface that will be applied by the web
          browser. The web browser will only be able to apply a font if it is available
          on the system which it operates. Provide multiple font families, separated
          by commas, to indicate the preference in which to apply fonts if they aren't
          available on the system. The plotly service (at https://plot.ly or on-premise)
          generates images on a server, where only a select number of fonts are installed
          and supported. These include `Arial`, `Balto`, `Courier New`, `Droid Sans`,,
          `Droid Serif`, `Droid Sans Mono`, `Gravitas One`, `Old Standard TT`, `Open
          Sans`, `Overpass`, `PT Sans Narrow`, `Raleway`, `Times New Roman`.
      - fieldname: size
        title: Size
        values: number
        min: 1
      - fieldname: color
        title: Color
        values: color
    - fieldname: tickangle
      title: Tick Angle
      values: angle
      default: auto
      description: Sets the angle of the tick labels with respect to the horizontal.
        For example, a `tickangle` of -90 draws the tick labels vertically.
    - fieldname: tickformat
      title: Tick Format
      values: string
      default: ''
      description: 'Sets the tick label formatting rule using d3 formatting mini-languages
        which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format
        And for dates see: https://github.com/d3/d3-time-format/blob/master/README.md#locale_format
        We add one item to d3''s date formatter: `%{n}f` for fractional seconds with
        n digits. For example, `2016-10-13 09:15:23.456` with tickformat `%H~%M~%S.%2f`
        would display `09~15~23.46`'
    - fieldname: hoverformat
      title: Hover Format
      values: string
      default: ''
      description: 'Sets the hover text formatting rule using d3 formatting mini-languages
        which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format
        And for dates see: https://github.com/d3/d3-time-format/blob/master/README.md#locale_format
        We add one item to d3''s date formatter: `%{n}f` for fractional seconds with
        n digits. For example, `2016-10-13 09:15:23.456` with tickformat `%H~%M~%S.%2f`
        would display `09~15~23.46`'
    - fieldname: showline
      title: Show Bounding Line
      values: boolean
      default: 'true'
      description: Determines whether or not a line bounding this axis is drawn.
    - fieldname: linecolor
      title: Line Color
      values: color
      default: '#444'
      description: Sets the axis line color.
    - fieldname: linewidth
      title: Linewidth
      values: number
      min: 0
      default: 1
      description: Sets the width (in px) of the axis line.
    - fieldname: showgrid
      title: Show Grid Lines
      values: boolean
      default: 'true'
      description: Determines whether or not grid lines are drawn. If `true`, the
        grid lines are drawn at every tick mark.
    - fieldname: gridcolor
      title: Grid Color
      values: color
      default: '#eee'
      description: Sets the color of the grid lines.
    - fieldname: gridwidth
      title: Grid Width
      values: number
      min: 0
      default: 1
      description: Sets the width (in px) of the grid lines.
    - fieldname: layer
      title: Layer
      values:
        - above traces
        - below traces
      default: above traces
      description: Sets the layer on which this axis is displayed. If `above traces`,
        this axis is displayed above all the subplot's traces If `below traces`, this
        axis is displayed below all the subplot's traces, but above the grid lines.
        Useful when used together with scatter-like traces with `cliponaxis` set to
        `false` to show markers and/or text nodes above this axis.
    - fieldname: tickvalssrc
    - fieldname: ticktextsrc
- fieldname: scene
  title: Scene
  subfields:
  - fieldname: _arrayAttrRegexps
  - fieldname: bgcolor
    title: Background Color
    values: color
    default: rgba(0,0,0,0)
  - fieldname: camera
    title: Camera
    subfields:
    - fieldname: up
      description: 'Sets the (x,y,z) components of the ''up'' camera vector. This
        vector determines the up direction of this scene with respect to the page.
        The default is `{x: 0, y: 0, z: 1}` which means that the z axis points up.'
      subfields:
      - fieldname: x
        title: X Position
        values: number
        default: 0
      - fieldname: y
        title: Y Position
        values: number
        default: 0
      - fieldname: z
        title: Z Position
        values: number
        default: 1
    - fieldname: center
      description: Sets the (x,y,z) components of the 'center' camera vector This
        vector determines the translation (x,y,z) space about the center of this scene.
        By default, there is no such translation.
      subfields:
      - fieldname: x
        title: X Position
        values: number
        default: 0
      - fieldname: y
        title: Y Position
        values: number
        default: 0
      - fieldname: z
        title: Z Position
        values: number
        default: 0
    - fieldname: eye
      description: Sets the (x,y,z) components of the 'eye' camera vector. This vector
        determines the view point about the origin of this scene.
      subfields:
      - fieldname: x
        title: X Position
        values: number
        default: 1.25
      - fieldname: y
        title: Y Position
        values: number
        default: 1.25
      - fieldname: z
        title: Z Position
        values: number
        default: 1.25
  - fieldname: domain
    title: Domain
    subfields:
    - fieldname: x
      title: X
      values: array
      default: '0, 1'
      description: Sets the horizontal domain of this scene (in plot fraction). Each
        object has one or more of the keys listed below.
    - fieldname: y
      title: Y
      values: array
      default: '0, 1'
      description: Sets the vertical domain of this scene (in plot fraction). Each
        object has one or more of the keys listed below.
  - fieldname: aspectmode
    title: Aspect Mode
    values:
      - auto
      - cube
        - data
        - manual
    default: auto
    description: If `cube`, this scene's axes are drawn as a cube, regardless of the
      axes' ranges. If `data`, this scene's axes are drawn in proportion with the
      axes' ranges. If `manual`, this scene's axes are drawn in proportion with the
      input of `aspectratio` (the default behavior if `aspectratio` is provided).
      If `auto`, this scene's axes are drawn using the results of `data` except when
      one axis is more than four times the size of the two others, where in that case
      the results of `cube` are used.
  - fieldname: aspectratio
    title: Aspect Ratio
    description: Sets this scene's axis aspectratio.
    subfields:
    - fieldname: x
      title: X Position
      values: number
      min: 0
    - fieldname: y
      title: Y Position
      values: number
      min: 0
    - fieldname: z
      title: Z Position
      values: number
      min: 0
  - fieldname: xaxis
    title: X Axis Reference
    subfields:
    - fieldname: visible
      title: Visible
      values: boolean
      description: A single toggle to hide the axis while preserving interaction like
        dragging. Default is true when a cheater plot is present on the axis, otherwise
        false
    - fieldname: showspikes
      title: Show Spikes
      values: boolean
      default: 'true'
      description: Sets whether or not spikes starting from data points to this axis'
        wall are shown on hover.
    - fieldname: spikesides
      title: Spikesides
      values: boolean
      default: 'true'
      description: Sets whether or not spikes extending from the projection data points
        to this axis' wall boundaries are shown on hover.
    - fieldname: spikethickness
      title: Spike Thickness
      values: number
      min: 0
      default: 2
      description: Sets the thickness (in px) of the spikes.
    - fieldname: spikecolor
      title: Spike Color
      values: color
      default: '#444'
      description: Sets the color of the spikes.
    - fieldname: showbackground
      title: Showbackground
      values: boolean
      description: Sets whether or not this axis' wall has a background color.
    - fieldname: backgroundcolor
      title: Backgroundcolor
      values: color
      default: rgba(204, 204, 204, 0.5)
      description: Sets the background color of this axis' wall.
    - fieldname: showaxeslabels
      title: Showaxeslabels
      values: boolean
      default: 'true'
      description: Sets whether or not this axis is labeled
    - fieldname: color
      title: Color
      values: color
      default: '#444'
      description: 'Sets default for all colors associated with this axis all at once:
        line, font, tick, and grid colors. Grid color is lightened by blending this
        with the plot background Individual pieces can override this.'
    - fieldname: categoryorder
      title: Axis Category Order
      values:
        - trace
        - category ascending
        - category descending
        - array
      default: trace
      description: Specifies the ordering logic for the case of categorical variables.
        By default, plotly uses `trace`, which specifies the order that is present
        in the data supplied. Set `categoryorder` to `category ascending` or `category
        descending` if order should be determined by the alphanumerical order of the
        category names. Set `categoryorder` to `array` to derive the ordering from
        the attribute `categoryarray`. If a category is not found in the `categoryarray`
        array, the sorting behavior for that attribute will be identical to the `trace`
        mode. The unspecified categories will follow the categories in `categoryarray`.
    - fieldname: categoryarray
      title: Axis Category Array
      values: data array
      description: Sets the order in which categories on this axis appear. Only has
        an effect if `categoryorder` is set to `array`. Used with `categoryorder`.
    - fieldname: title
      title: Title
      values: string
      description: Sets the title of this axis.
    - fieldname: titlefont
      title: Title Font
      description: Sets this axis' title font.
      subfields:
      - fieldname: family
        title: Family
        values: string
        description: HTML font family - the typeface that will be applied by the web
          browser. The web browser will only be able to apply a font if it is available
          on the system which it operates. Provide multiple font families, separated
          by commas, to indicate the preference in which to apply fonts if they aren't
          available on the system. The plotly service (at https://plot.ly or on-premise)
          generates images on a server, where only a select number of fonts are installed
          and supported. These include `Arial`, `Balto`, `Courier New`, `Droid Sans`,,
          `Droid Serif`, `Droid Sans Mono`, `Gravitas One`, `Old Standard TT`, `Open
          Sans`, `Overpass`, `PT Sans Narrow`, `Raleway`, `Times New Roman`.
      - fieldname: size
        title: Size
        values: number
        min: 1
      - fieldname: color
        title: Color
        values: color
    - fieldname: type
      title: Type
      values:
        - '-'
        -
        - linear
        - log
        - date
        - category
      default: '-'
      description: Sets the axis type. By default, plotly attempts to determined the
        axis type by looking into the data of the traces that referenced the axis
        in question.
    - fieldname: autorange
      title: Automatic Range
      values:
        - 'true'
        - 'false'
        - reversed
      default: 'true'
      description: Determines whether or not the range of this axis is computed in
        relation to the input data. See `rangemode` for more info. If `range` is provided,
        then `autorange` is set to `false`.
    - fieldname: rangemode
      title: Rangemode
      values:
        - normal
        - tozero
        - nonnegative
      default: normal
      description: If `normal`, the range is computed in relation to the extrema of
        the input data. If `tozero``, the range extends to 0, regardless of the input
        data If `nonnegative`, the range is non-negative, regardless of the input
        data.
    - fieldname: range
      title: Range
      values: array
      description: Sets the range of this axis. If the axis `type` is `log`, then
        you must take the log of your desired range (e.g. to set the range from 1
        to 100, set the range from 0 to 2). If the axis `type` is `date`, it should
        be date strings, like date data, though Date objects and unix milliseconds
        will be accepted and converted to strings. If the axis `type` is `category`,
        it should be numbers, using the scale where each category is assigned a serial
        number from zero in the order it appears. Each object has one or more of the
        keys listed below.
    - fieldname: tickmode
      title: Tick Mode
      values:
        - auto
        - linear
        - array
      description: Sets the tick mode for this axis. If `auto`, the number of ticks
        is set via `nticks`. If `linear`, the placement of the ticks is determined
        by a starting position `tick0` and a tick step `dtick` (`linear` is the default
        value if `tick0` and `dtick` are provided). If `array`, the placement of the
        ticks is set via `tickvals` and the tick text is `ticktext`. (`array` is the
        default value if `tickvals` is provided).
    - fieldname: nticks
      title: Maximum Number of Ticks
      values: integer
      min: 0
      default: 0
      description: Specifies the maximum number of ticks for the particular axis.
        The actual number of ticks will be chosen automatically to be less than or
        equal to `nticks`. Has an effect only if `tickmode` is set to `auto`.
    - fieldname: tick0
      title: First Tick Position
      values: number or categorical coordinate string
      description: Sets the placement of the first tick on this axis. Use with `dtick`.
        If the axis `type` is `log`, then you must take the log of your starting tick
        (e.g. to set the starting tick to 100, set the `tick0` to 2) except when `dtick`=`L&lt;f&gt;`
        (see `dtick` for more info). If the axis `type` is `date`, it should be a
        date string, like date data. If the axis `type` is `category`, it should be
        a number, using the scale where each category is assigned a serial number
        from zero in the order it appears.
    - fieldname: dtick
      title: Tick In-Between Step
      values: number or categorical coordinate string
      description: Sets the step in-between ticks on this axis. Use with `tick0`.
        Must be a positive number, or special strings available to `log` and `date`
        axes. If the axis `type` is `log`, then ticks are set every 10^(n`dtick) where
        n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000,
        ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2.
        To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5),
        or 0.69897000433. `log` has several special values; `L&lt;f&gt;`, where `f`
        is a positive number, gives ticks linearly spaced in value (but not position).
        For example `tick0` = 0.1, `dtick` = `L0.5` will put ticks at 0.1, 0.6, 1.1,
        1.6 etc. To show powers of 10 plus small digits between, use `D1` (all digits)
        or `D2` (only 2 and 5). `tick0` is ignored for `D1` and `D2`. If the axis
        `type` is `date`, then you must convert the time to milliseconds. For example,
        to set the interval between ticks to one day, set `dtick` to 86400000.0. `date`
        also has special values `M&lt;n&gt;` gives ticks spaced by a number of months.
        `n` must be a positive integer. To set ticks on the 15th of every third month,
        set `tick0` to `2000-01-15` and `dtick` to `M3`. To set ticks every 4 years,
        set `dtick` to `M48`
    - fieldname: tickvals
      title: Tick Values
      values: data array
      description: Sets the values at which ticks on this axis appear. Only has an
        effect if `tickmode` is set to `array`. Used with `ticktext`.
    - fieldname: ticktext
      title: Tick Text
      values: data array
      description: Sets the text displayed at the ticks position via `tickvals`. Only
        has an effect if `tickmode` is set to `array`. Used with `tickvals`.
    - fieldname: ticks
      title: Ticks
      values:
        - ''
        - outside
        - inside
      description: Determines whether ticks are drawn or not. If ``, this axis' ticks
        are not drawn. If `outside` (`inside`), this axis' are drawn outside (inside)
        the axis lines.
    - fieldname: mirror
      title: Mirror
      values:
        - 'true'
        - ticks
        - 'false'
        - all
        - allticks
      description: Determines if the axis lines or/and ticks are mirrored to the opposite
        side of the plotting area. If `true`, the axis lines are mirrored. If `ticks`,
        the axis lines and ticks are mirrored. If `false`, mirroring is disable. If
        `all`, axis lines are mirrored on all shared-axes subplots. If `allticks`,
        axis lines and ticks are mirrored on all shared-axes subplots.
    - fieldname: ticklen
      title: Tick Length
      values: number
      min: 0
      default: 5
      description: Sets the tick length (in px).
    - fieldname: tickwidth
      title: Tick Width
      values: number
      min: 0
      default: 1
      description: Sets the tick width (in px).
    - fieldname: tickcolor
      title: Tick Color
      values: color
      default: '#444'
      description: Sets the tick color.
    - fieldname: showticklabels
      title: Show Tick Labels
      values: boolean
      default: 'true'
      description: Determines whether or not the tick labels are drawn.
    - fieldname: tickfont
      title: Tick Font
      description: Sets the tick font.
      subfields:
      - fieldname: family
        title: Family
        values: string
        description: HTML font family - the typeface that will be applied by the web
          browser. The web browser will only be able to apply a font if it is available
          on the system which it operates. Provide multiple font families, separated
          by commas, to indicate the preference in which to apply fonts if they aren't
          available on the system. The plotly service (at https://plot.ly or on-premise)
          generates images on a server, where only a select number of fonts are installed
          and supported. These include `Arial`, `Balto`, `Courier New`, `Droid Sans`,,
          `Droid Serif`, `Droid Sans Mono`, `Gravitas One`, `Old Standard TT`, `Open
          Sans`, `Overpass`, `PT Sans Narrow`, `Raleway`, `Times New Roman`.
      - fieldname: size
        title: Size
        values: number
        min: 1
      - fieldname: color
        title: Color
        values: color
    - fieldname: tickangle
      title: Tick Angle
      values: angle
      default: auto
      description: Sets the angle of the tick labels with respect to the horizontal.
        For example, a `tickangle` of -90 draws the tick labels vertically.
    - fieldname: tickprefix
      title: Tick Prefix
      values: string
      default: ''
      description: Sets a tick label prefix.
    - fieldname: showtickprefix
      title: Show Tick Prefix
      values:
        - all
        - first
        - last
        - none
      default: all
      description: If `all`, all tick labels are displayed with a prefix. If `first`,
        only the first tick is displayed with a prefix. If `last`, only the last tick
        is displayed with a suffix. If `none`, tick prefixes are hidden.
    - fieldname: ticksuffix
      title: Tick Suffix
      values: string
      default: ''
      description: Sets a tick label suffix.
    - fieldname: showticksuffix
      title: Show Tick Suffix
      values:
        - all
        - first
        - last
        - none
      default: all
      description: Same as `showtickprefix` but for tick suffixes.
    - fieldname: showexponent
      title: Show Exponent
      values:
        - all
        - first
        - last
        - none
      default: all
      description: If `all`, all exponents are shown besides their significands. If
        `first`, only the exponent of the first tick is shown. If `last`, only the
        exponent of the last tick is shown. If `none`, no exponents appear.
    - fieldname: exponentformat
      title: Exponent Format
      values:
        none: '1,000,000,000'
        e: '1e+9'
        E: '1E+9'
        power: '1x10^9'
        SI: '1G'
        B: '1B'
      default: B
      description: Determines a formatting rule for the tick exponents. The dropdown
        shows formatting for the number 1,000,000,000.
    - fieldname: separatethousands
      title: Separate Thousands
      values: boolean
      description: If `true`, even 4-digit integers are separated
    - fieldname: tickformat
      title: Tick Format
      values: string
      default: ''
      description: 'Sets the tick label formatting rule using d3 formatting mini-languages
        which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format
        And for dates see: https://github.com/d3/d3-time-format/blob/master/README.md#locale_format
        We add one item to d3''s date formatter: `%{n}f` for fractional seconds with
        n digits. For example, `2016-10-13 09:15:23.456` with tickformat `%H~%M~%S.%2f`
        would display `09~15~23.46`'
    - fieldname: hoverformat
      title: Hover Format
      values: string
      default: ''
      description: 'Sets the hover text formatting rule using d3 formatting mini-languages
        which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format
        And for dates see: https://github.com/d3/d3-time-format/blob/master/README.md#locale_format
        We add one item to d3''s date formatter: `%{n}f` for fractional seconds with
        n digits. For example, `2016-10-13 09:15:23.456` with tickformat `%H~%M~%S.%2f`
        would display `09~15~23.46`'
    - fieldname: showline
      title: Show Bounding Line
      values: boolean
      description: Determines whether or not a line bounding this axis is drawn.
    - fieldname: linecolor
      title: Line Color
      values: color
      default: '#444'
      description: Sets the axis line color.
    - fieldname: linewidth
      title: Linewidth
      values: number
      min: 0
      default: 1
      description: Sets the width (in px) of the axis line.
    - fieldname: showgrid
      title: Show Grid Lines
      values: boolean
      description: Determines whether or not grid lines are drawn. If `true`, the
        grid lines are drawn at every tick mark.
    - fieldname: gridcolor
      title: Grid Color
      values: color
      default: rgb(204, 204, 204)
      description: Sets the color of the grid lines.
    - fieldname: gridwidth
      title: Grid Width
      values: number
      min: 0
      default: 1
      description: Sets the width (in px) of the grid lines.
    - fieldname: zeroline
      title: Line at Zero Value
      values: boolean
      description: Determines whether or not a line is drawn at along the 0 value
        of this axis. If `true`, the zero line is drawn on top of the grid lines.
    - fieldname: zerolinecolor
      title: Line at Zero Color
      values: color
      default: '#444'
      description: Sets the line color of the zero line.
    - fieldname: zerolinewidth
      title: Line at Zero Width
      values: number
      default: 1
      description: Sets the width (in px) of the zero line.
    - fieldname: calendar
      title: Calendar
      values:
        gregorian: Gregorian
        chinese: Chinese
        coptic: Coptic
        discworld: Discworld
        ethiopian: Ethiopian
        hebrew: Hebrew
        islamic: Islamic
        julian: Julian
        mayan: Mayan
        nanakshahi: Nanakshahi
        nepali: Nepali
        persian: Old Persian
        jalali: Jalali
        taiwan: Minguo
        thai: Thai
        ummalqura: Umm al-Qura
      default: gregorian
      description: Sets the calendar system to use for `range` and `tick0` if this
        is a date axis. This does not set the calendar for interpreting data on this
        axis, that's specified in the trace or via the global `layout.calendar`
    - fieldname: categoryarraysrc
    - fieldname: tickvalssrc
    - fieldname: ticktextsrc
  - fieldname: yaxis
    title: Y Axis Reference
    subfields:
    - fieldname: visible
      title: Visible
      values: boolean
      description: A single toggle to hide the axis while preserving interaction like
        dragging. Default is true when a cheater plot is present on the axis, otherwise
        false
    - fieldname: showspikes
      title: Show Spikes
      values: boolean
      default: 'true'
      description: Sets whether or not spikes starting from data points to this axis'
        wall are shown on hover.
    - fieldname: spikesides
      title: Spikesides
      values: boolean
      default: 'true'
      description: Sets whether or not spikes extending from the projection data points
        to this axis' wall boundaries are shown on hover.
    - fieldname: spikethickness
      title: Spike Thickness
      values: number
      min: 0
      default: 2
      description: Sets the thickness (in px) of the spikes.
    - fieldname: spikecolor
      title: Spike Color
      values: color
      default: '#444'
      description: Sets the color of the spikes.
    - fieldname: showbackground
      title: Showbackground
      values: boolean
      description: Sets whether or not this axis' wall has a background color.
    - fieldname: backgroundcolor
      title: Backgroundcolor
      values: color
      default: rgba(204, 204, 204, 0.5)
      description: Sets the background color of this axis' wall.
    - fieldname: showaxeslabels
      title: Showaxeslabels
      values: boolean
      default: 'true'
      description: Sets whether or not this axis is labeled
    - fieldname: color
      title: Color
      values: color
      default: '#444'
      description: 'Sets default for all colors associated with this axis all at once:
        line, font, tick, and grid colors. Grid color is lightened by blending this
        with the plot background Individual pieces can override this.'
    - fieldname: categoryorder
      title: Axis Category Order
      values:
        - trace
        - category ascending
        - category descending
        - array
      default: trace
      description: Specifies the ordering logic for the case of categorical variables.
        By default, plotly uses `trace`, which specifies the order that is present
        in the data supplied. Set `categoryorder` to `category ascending` or `category
        descending` if order should be determined by the alphanumerical order of the
        category names. Set `categoryorder` to `array` to derive the ordering from
        the attribute `categoryarray`. If a category is not found in the `categoryarray`
        array, the sorting behavior for that attribute will be identical to the `trace`
        mode. The unspecified categories will follow the categories in `categoryarray`.
    - fieldname: categoryarray
      title: Axis Category Array
      values: data array
      description: Sets the order in which categories on this axis appear. Only has
        an effect if `categoryorder` is set to `array`. Used with `categoryorder`.
    - fieldname: title
      title: Title
      values: string
      description: Sets the title of this axis.
    - fieldname: titlefont
      title: Title Font
      description: Sets this axis' title font.
      subfields:
      - fieldname: family
        title: Family
        values: string
        description: HTML font family - the typeface that will be applied by the web
          browser. The web browser will only be able to apply a font if it is available
          on the system which it operates. Provide multiple font families, separated
          by commas, to indicate the preference in which to apply fonts if they aren't
          available on the system. The plotly service (at https://plot.ly or on-premise)
          generates images on a server, where only a select number of fonts are installed
          and supported. These include `Arial`, `Balto`, `Courier New`, `Droid Sans`,,
          `Droid Serif`, `Droid Sans Mono`, `Gravitas One`, `Old Standard TT`, `Open
          Sans`, `Overpass`, `PT Sans Narrow`, `Raleway`, `Times New Roman`.
      - fieldname: size
        title: Size
        values: number
        min: 1
      - fieldname: color
        title: Color
        values: color
    - fieldname: type
      title: Type
      values:
        - '-'
        - linear
        - log
        - date
        - category
      default: '-'
      description: Sets the axis type. By default, plotly attempts to determined the
        axis type by looking into the data of the traces that referenced the axis
        in question.
    - fieldname: autorange
      title: Automatic Range
      values:
        - 'true'
        - 'false'
        - reversed
      default: 'true'
      description: Determines whether or not the range of this axis is computed in
        relation to the input data. See `rangemode` for more info. If `range` is provided,
        then `autorange` is set to `false`.
    - fieldname: rangemode
      title: Rangemode
      values:
        - normal
        - tozero
        - nonnegative
      default: normal
      description: If `normal`, the range is computed in relation to the extrema of
        the input data. If `tozero``, the range extends to 0, regardless of the input
        data If `nonnegative`, the range is non-negative, regardless of the input
        data.
    - fieldname: range
      title: Range
      values: array
      description: Sets the range of this axis. If the axis `type` is `log`, then
        you must take the log of your desired range (e.g. to set the range from 1
        to 100, set the range from 0 to 2). If the axis `type` is `date`, it should
        be date strings, like date data, though Date objects and unix milliseconds
        will be accepted and converted to strings. If the axis `type` is `category`,
        it should be numbers, using the scale where each category is assigned a serial
        number from zero in the order it appears. Each object has one or more of the
        keys listed below.
    - fieldname: tickmode
      title: Tick Mode
      values:
        - auto
        - linear
        - array
      description: Sets the tick mode for this axis. If `auto`, the number of ticks
        is set via `nticks`. If `linear`, the placement of the ticks is determined
        by a starting position `tick0` and a tick step `dtick` (`linear` is the default
        value if `tick0` and `dtick` are provided). If `array`, the placement of the
        ticks is set via `tickvals` and the tick text is `ticktext`. (`array` is the
        default value if `tickvals` is provided).
    - fieldname: nticks
      title: Maximum Number of Ticks
      values: integer
      min: 0
      default: 0
      description: Specifies the maximum number of ticks for the particular axis.
        The actual number of ticks will be chosen automatically to be less than or
        equal to `nticks`. Has an effect only if `tickmode` is set to `auto`.
    - fieldname: tick0
      title: First Tick Position
      values: number or categorical coordinate string
      description: Sets the placement of the first tick on this axis. Use with `dtick`.
        If the axis `type` is `log`, then you must take the log of your starting tick
        (e.g. to set the starting tick to 100, set the `tick0` to 2) except when `dtick`=`L&lt;f&gt;`
        (see `dtick` for more info). If the axis `type` is `date`, it should be a
        date string, like date data. If the axis `type` is `category`, it should be
        a number, using the scale where each category is assigned a serial number
        from zero in the order it appears.
    - fieldname: dtick
      title: Tick In-Between Step
      values: number or categorical coordinate string
      description: Sets the step in-between ticks on this axis. Use with `tick0`.
        Must be a positive number, or special strings available to `log` and `date`
        axes. If the axis `type` is `log`, then ticks are set every 10^(n`dtick) where
        n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000,
        ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2.
        To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5),
        or 0.69897000433. `log` has several special values; `L&lt;f&gt;`, where `f`
        is a positive number, gives ticks linearly spaced in value (but not position).
        For example `tick0` = 0.1, `dtick` = `L0.5` will put ticks at 0.1, 0.6, 1.1,
        1.6 etc. To show powers of 10 plus small digits between, use `D1` (all digits)
        or `D2` (only 2 and 5). `tick0` is ignored for `D1` and `D2`. If the axis
        `type` is `date`, then you must convert the time to milliseconds. For example,
        to set the interval between ticks to one day, set `dtick` to 86400000.0. `date`
        also has special values `M&lt;n&gt;` gives ticks spaced by a number of months.
        `n` must be a positive integer. To set ticks on the 15th of every third month,
        set `tick0` to `2000-01-15` and `dtick` to `M3`. To set ticks every 4 years,
        set `dtick` to `M48`
    - fieldname: tickvals
      title: Tick Values
      values: data array
      description: Sets the values at which ticks on this axis appear. Only has an
        effect if `tickmode` is set to `array`. Used with `ticktext`.
    - fieldname: ticktext
      title: Tick Text
      values: data array
      description: Sets the text displayed at the ticks position via `tickvals`. Only
        has an effect if `tickmode` is set to `array`. Used with `tickvals`.
    - fieldname: ticks
      title: Ticks
      values:
        - ''
        - outside
        - inside
      description: Determines whether ticks are drawn or not. If ``, this axis' ticks
        are not drawn. If `outside` (`inside`), this axis' are drawn outside (inside)
        the axis lines.
    - fieldname: mirror
      title: Mirror
      values:
        - 'true'
        - ticks
        - 'false'
        - all
        - allticks
      description: Determines if the axis lines or/and ticks are mirrored to the opposite
        side of the plotting area. If `true`, the axis lines are mirrored. If `ticks`,
        the axis lines and ticks are mirrored. If `false`, mirroring is disable. If
        `all`, axis lines are mirrored on all shared-axes subplots. If `allticks`,
        axis lines and ticks are mirrored on all shared-axes subplots.
    - fieldname: ticklen
      title: Tick Length
      values: number
      min: 0
      default: 5
      description: Sets the tick length (in px).
    - fieldname: tickwidth
      title: Tick Width
      values: number
      min: 0
      default: 1
      description: Sets the tick width (in px).
    - fieldname: tickcolor
      title: Tick Color
      values: color
      default: '#444'
      description: Sets the tick color.
    - fieldname: showticklabels
      title: Show Tick Labels
      values: boolean
      default: 'true'
      description: Determines whether or not the tick labels are drawn.
    - fieldname: tickfont
      title: Tick Font
      description: Sets the tick font.
      subfields:
      - fieldname: family
        title: Family
        values: string
        description: HTML font family - the typeface that will be applied by the web
          browser. The web browser will only be able to apply a font if it is available
          on the system which it operates. Provide multiple font families, separated
          by commas, to indicate the preference in which to apply fonts if they aren't
          available on the system. The plotly service (at https://plot.ly or on-premise)
          generates images on a server, where only a select number of fonts are installed
          and supported. These include `Arial`, `Balto`, `Courier New`, `Droid Sans`,,
          `Droid Serif`, `Droid Sans Mono`, `Gravitas One`, `Old Standard TT`, `Open
          Sans`, `Overpass`, `PT Sans Narrow`, `Raleway`, `Times New Roman`.
      - fieldname: size
        title: Size
        values: number
        min: 1
      - fieldname: color
        title: Color
        values: color
    - fieldname: tickangle
      title: Tick Angle
      values: angle
      default: auto
      description: Sets the angle of the tick labels with respect to the horizontal.
        For example, a `tickangle` of -90 draws the tick labels vertically.
    - fieldname: tickprefix
      title: Tick Prefix
      values: string
      default: ''
      description: Sets a tick label prefix.
    - fieldname: showtickprefix
      title: Show Tick Prefix
      values:
        - all
        - first
        - last
        - none
      default: all
      description: If `all`, all tick labels are displayed with a prefix. If `first`,
        only the first tick is displayed with a prefix. If `last`, only the last tick
        is displayed with a suffix. If `none`, tick prefixes are hidden.
    - fieldname: ticksuffix
      title: Tick Suffix
      values: string
      default: ''
      description: Sets a tick label suffix.
    - fieldname: showticksuffix
      title: Show Tick Suffix
      values:
        - all
        - first
        - last
        - none
      default: all
      description: Same as `showtickprefix` but for tick suffixes.
    - fieldname: showexponent
      title: Show Exponent
      values:
        - all
        - first
        - last
        - none
      default: all
      description: If `all`, all exponents are shown besides their significands. If
        `first`, only the exponent of the first tick is shown. If `last`, only the
        exponent of the last tick is shown. If `none`, no exponents appear.
    - fieldname: exponentformat
      title: Exponent Format
      values:
        none: '1,000,000,000'
        e: '1e+9'
        E: '1E+9'
        power: '1x10^9'
        SI: '1G'
        B: '1B'
      default: B
      description: Determines a formatting rule for the tick exponents. The dropdown
        shows formatting for the number 1,000,000,000.
    - fieldname: separatethousands
      title: Separate Thousands
      values: boolean
      description: If `true`, even 4-digit integers are separated
    - fieldname: tickformat
      title: Tick Format
      values: string
      default: ''
      description: 'Sets the tick label formatting rule using d3 formatting mini-languages
        which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format
        And for dates see: https://github.com/d3/d3-time-format/blob/master/README.md#locale_format
        We add one item to d3''s date formatter: `%{n}f` for fractional seconds with
        n digits. For example, `2016-10-13 09:15:23.456` with tickformat `%H~%M~%S.%2f`
        would display `09~15~23.46`'
    - fieldname: hoverformat
      title: Hover Format
      values: string
      default: ''
      description: 'Sets the hover text formatting rule using d3 formatting mini-languages
        which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format
        And for dates see: https://github.com/d3/d3-time-format/blob/master/README.md#locale_format
        We add one item to d3''s date formatter: `%{n}f` for fractional seconds with
        n digits. For example, `2016-10-13 09:15:23.456` with tickformat `%H~%M~%S.%2f`
        would display `09~15~23.46`'
    - fieldname: showline
      title: Show Bounding Line
      values: boolean
      description: Determines whether or not a line bounding this axis is drawn.
    - fieldname: linecolor
      title: Line Color
      values: color
      default: '#444'
      description: Sets the axis line color.
    - fieldname: linewidth
      title: Linewidth
      values: number
      min: 0
      default: 1
      description: Sets the width (in px) of the axis line.
    - fieldname: showgrid
      title: Show Grid Lines
      values: boolean
      description: Determines whether or not grid lines are drawn. If `true`, the
        grid lines are drawn at every tick mark.
    - fieldname: gridcolor
      title: Grid Color
      values: color
      default: rgb(204, 204, 204)
      description: Sets the color of the grid lines.
    - fieldname: gridwidth
      title: Grid Width
      values: number
      min: 0
      default: 1
      description: Sets the width (in px) of the grid lines.
    - fieldname: zeroline
      title: Line at Zero Value
      values: boolean
      description: Determines whether or not a line is drawn at along the 0 value
        of this axis. If `true`, the zero line is drawn on top of the grid lines.
    - fieldname: zerolinecolor
      title: Line at Zero Color
      values: color
      default: '#444'
      description: Sets the line color of the zero line.
    - fieldname: zerolinewidth
      title: Line at Zero Width
      values: number
      default: 1
      description: Sets the width (in px) of the zero line.
    - fieldname: calendar
      title: Calendar
      values:
        gregorian: Gregorian
        chinese: Chinese
        coptic: Coptic
        discworld: Discworld
        ethiopian: Ethiopian
        hebrew: Hebrew
        islamic: Islamic
        julian: Julian
        mayan: Mayan
        nanakshahi: Nanakshahi
        nepali: Nepali
        persian: Old Persian
        jalali: Jalali
        taiwan: Minguo
        thai: Thai
        ummalqura: Umm al-Qura
      default: gregorian
      description: Sets the calendar system to use for `range` and `tick0` if this
        is a date axis. This does not set the calendar for interpreting data on this
        axis, that's specified in the trace or via the global `layout.calendar`
    - fieldname: categoryarraysrc
    - fieldname: tickvalssrc
    - fieldname: ticktextsrc
  - fieldname: zaxis
    title: Zaxis
    subfields:
    - fieldname: visible
      title: Visible
      values: boolean
      description: A single toggle to hide the axis while preserving interaction like
        dragging. Default is true when a cheater plot is present on the axis, otherwise
        false
    - fieldname: showspikes
      title: Show Spikes
      values: boolean
      default: 'true'
      description: Sets whether or not spikes starting from data points to this axis'
        wall are shown on hover.
    - fieldname: spikesides
      title: Spikesides
      values: boolean
      default: 'true'
      description: Sets whether or not spikes extending from the projection data points
        to this axis' wall boundaries are shown on hover.
    - fieldname: spikethickness
      title: Spike Thickness
      values: number
      min: 0
      default: 2
      description: Sets the thickness (in px) of the spikes.
    - fieldname: spikecolor
      title: Spike Color
      values: color
      default: '#444'
      description: Sets the color of the spikes.
    - fieldname: showbackground
      title: Showbackground
      values: boolean
      description: Sets whether or not this axis' wall has a background color.
    - fieldname: backgroundcolor
      title: Backgroundcolor
      values: color
      default: rgba(204, 204, 204, 0.5)
      description: Sets the background color of this axis' wall.
    - fieldname: showaxeslabels
      title: Showaxeslabels
      values: boolean
      default: 'true'
      description: Sets whether or not this axis is labeled
    - fieldname: color
      title: Color
      values: color
      default: '#444'
      description: 'Sets default for all colors associated with this axis all at once:
        line, font, tick, and grid colors. Grid color is lightened by blending this
        with the plot background Individual pieces can override this.'
    - fieldname: categoryorder
      title: Axis Category Order
      values:
        - trace
        - category ascending
        - category descending
        - array
      default: trace
      description: Specifies the ordering logic for the case of categorical variables.
        By default, plotly uses `trace`, which specifies the order that is present
        in the data supplied. Set `categoryorder` to `category ascending` or `category
        descending` if order should be determined by the alphanumerical order of the
        category names. Set `categoryorder` to `array` to derive the ordering from
        the attribute `categoryarray`. If a category is not found in the `categoryarray`
        array, the sorting behavior for that attribute will be identical to the `trace`
        mode. The unspecified categories will follow the categories in `categoryarray`.
    - fieldname: categoryarray
      title: Axis Category Array
      values: data array
      description: Sets the order in which categories on this axis appear. Only has
        an effect if `categoryorder` is set to `array`. Used with `categoryorder`.
    - fieldname: title
      title: Title
      values: string
      description: Sets the title of this axis.
    - fieldname: titlefont
      title: Title Font
      description: Sets this axis' title font.
      subfields:
      - fieldname: family
        title: Family
        values: string
        description: HTML font family - the typeface that will be applied by the web
          browser. The web browser will only be able to apply a font if it is available
          on the system which it operates. Provide multiple font families, separated
          by commas, to indicate the preference in which to apply fonts if they aren't
          available on the system. The plotly service (at https://plot.ly or on-premise)
          generates images on a server, where only a select number of fonts are installed
          and supported. These include `Arial`, `Balto`, `Courier New`, `Droid Sans`,,
          `Droid Serif`, `Droid Sans Mono`, `Gravitas One`, `Old Standard TT`, `Open
          Sans`, `Overpass`, `PT Sans Narrow`, `Raleway`, `Times New Roman`.
      - fieldname: size
        title: Size
        values: number
        min: 1
      - fieldname: color
        title: Color
        values: color
    - fieldname: type
      title: Type
      values:
        - '-'
        - linear
        - log
        - date
        - category
      default: '-'
      description: Sets the axis type. By default, plotly attempts to determined the
        axis type by looking into the data of the traces that referenced the axis
        in question.
    - fieldname: autorange
      title: Automatic Range
      values:
        - 'true'
        - 'false'
        - reversed
      default: 'true'
      description: Determines whether or not the range of this axis is computed in
        relation to the input data. See `rangemode` for more info. If `range` is provided,
        then `autorange` is set to `false`.
    - fieldname: rangemode
      title: Rangemode
      values:
        - normal
        - tozero
        - nonnegative
      default: normal
      description: If `normal`, the range is computed in relation to the extrema of
        the input data. If `tozero``, the range extends to 0, regardless of the input
        data If `nonnegative`, the range is non-negative, regardless of the input
        data.
    - fieldname: range
      title: Range
      values: array
      description: Sets the range of this axis. If the axis `type` is `log`, then
        you must take the log of your desired range (e.g. to set the range from 1
        to 100, set the range from 0 to 2). If the axis `type` is `date`, it should
        be date strings, like date data, though Date objects and unix milliseconds
        will be accepted and converted to strings. If the axis `type` is `category`,
        it should be numbers, using the scale where each category is assigned a serial
        number from zero in the order it appears. Each object has one or more of the
        keys listed below.
    - fieldname: tickmode
      title: Tick Mode
      values:
        - auto
        - linear
        - array
      description: Sets the tick mode for this axis. If `auto`, the number of ticks
        is set via `nticks`. If `linear`, the placement of the ticks is determined
        by a starting position `tick0` and a tick step `dtick` (`linear` is the default
        value if `tick0` and `dtick` are provided). If `array`, the placement of the
        ticks is set via `tickvals` and the tick text is `ticktext`. (`array` is the
        default value if `tickvals` is provided).
    - fieldname: nticks
      title: Maximum Number of Ticks
      values: integer
      min: 0
      default: 0
      description: Specifies the maximum number of ticks for the particular axis.
        The actual number of ticks will be chosen automatically to be less than or
        equal to `nticks`. Has an effect only if `tickmode` is set to `auto`.
    - fieldname: tick0
      title: First Tick Position
      values: number or categorical coordinate string
      description: Sets the placement of the first tick on this axis. Use with `dtick`.
        If the axis `type` is `log`, then you must take the log of your starting tick
        (e.g. to set the starting tick to 100, set the `tick0` to 2) except when `dtick`=`L&lt;f&gt;`
        (see `dtick` for more info). If the axis `type` is `date`, it should be a
        date string, like date data. If the axis `type` is `category`, it should be
        a number, using the scale where each category is assigned a serial number
        from zero in the order it appears.
    - fieldname: dtick
      title: Tick In-Between Step
      values: number or categorical coordinate string
      description: Sets the step in-between ticks on this axis. Use with `tick0`.
        Must be a positive number, or special strings available to `log` and `date`
        axes. If the axis `type` is `log`, then ticks are set every 10^(n`dtick) where
        n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000,
        ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2.
        To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5),
        or 0.69897000433. `log` has several special values; `L&lt;f&gt;`, where `f`
        is a positive number, gives ticks linearly spaced in value (but not position).
        For example `tick0` = 0.1, `dtick` = `L0.5` will put ticks at 0.1, 0.6, 1.1,
        1.6 etc. To show powers of 10 plus small digits between, use `D1` (all digits)
        or `D2` (only 2 and 5). `tick0` is ignored for `D1` and `D2`. If the axis
        `type` is `date`, then you must convert the time to milliseconds. For example,
        to set the interval between ticks to one day, set `dtick` to 86400000.0. `date`
        also has special values `M&lt;n&gt;` gives ticks spaced by a number of months.
        `n` must be a positive integer. To set ticks on the 15th of every third month,
        set `tick0` to `2000-01-15` and `dtick` to `M3`. To set ticks every 4 years,
        set `dtick` to `M48`
    - fieldname: tickvals
      title: Tick Values
      values: data array
      description: Sets the values at which ticks on this axis appear. Only has an
        effect if `tickmode` is set to `array`. Used with `ticktext`.
    - fieldname: ticktext
      title: Tick Text
      values: data array
      description: Sets the text displayed at the ticks position via `tickvals`. Only
        has an effect if `tickmode` is set to `array`. Used with `tickvals`.
    - fieldname: ticks
      title: Ticks
      values:
        - ''
        - outside
        - inside
      description: Determines whether ticks are drawn or not. If ``, this axis' ticks
        are not drawn. If `outside` (`inside`), this axis' are drawn outside (inside)
        the axis lines.
    - fieldname: mirror
      title: Mirror
      values:
        - 'true'
        - ticks
        - 'false'
        - all
        - allticks
      description: Determines if the axis lines or/and ticks are mirrored to the opposite
        side of the plotting area. If `true`, the axis lines are mirrored. If `ticks`,
        the axis lines and ticks are mirrored. If `false`, mirroring is disable. If
        `all`, axis lines are mirrored on all shared-axes subplots. If `allticks`,
        axis lines and ticks are mirrored on all shared-axes subplots.
    - fieldname: ticklen
      title: Tick Length
      values: number
      min: 0
      default: 5
      description: Sets the tick length (in px).
    - fieldname: tickwidth
      title: Tick Width
      values: number
      min: 0
      default: 1
      description: Sets the tick width (in px).
    - fieldname: tickcolor
      title: Tick Color
      values: color
      default: '#444'
      description: Sets the tick color.
    - fieldname: showticklabels
      title: Show Tick Labels
      values: boolean
      default: 'true'
      description: Determines whether or not the tick labels are drawn.
    - fieldname: tickfont
      title: Tick Font
      description: Sets the tick font.
      subfields:
      - fieldname: family
        title: Family
        values: string
        description: HTML font family - the typeface that will be applied by the web
          browser. The web browser will only be able to apply a font if it is available
          on the system which it operates. Provide multiple font families, separated
          by commas, to indicate the preference in which to apply fonts if they aren't
          available on the system. The plotly service (at https://plot.ly or on-premise)
          generates images on a server, where only a select number of fonts are installed
          and supported. These include `Arial`, `Balto`, `Courier New`, `Droid Sans`,,
          `Droid Serif`, `Droid Sans Mono`, `Gravitas One`, `Old Standard TT`, `Open
          Sans`, `Overpass`, `PT Sans Narrow`, `Raleway`, `Times New Roman`.
      - fieldname: size
        title: Size
        values: number
        min: 1
      - fieldname: color
        title: Color
        values: color
    - fieldname: tickangle
      title: Tick Angle
      values: angle
      default: auto
      description: Sets the angle of the tick labels with respect to the horizontal.
        For example, a `tickangle` of -90 draws the tick labels vertically.
    - fieldname: tickprefix
      title: Tick Prefix
      values: string
      default: ''
      description: Sets a tick label prefix.
    - fieldname: showtickprefix
      title: Show Tick Prefix
      values:
        - all
        - first
        - last
        - none
      default: all
      description: If `all`, all tick labels are displayed with a prefix. If `first`,
        only the first tick is displayed with a prefix. If `last`, only the last tick
        is displayed with a suffix. If `none`, tick prefixes are hidden.
    - fieldname: ticksuffix
      title: Tick Suffix
      values: string
      default: ''
      description: Sets a tick label suffix.
    - fieldname: showticksuffix
      title: Show Tick Suffix
      values:
        - all
        - first
        - last
        - none
      default: all
      description: Same as `showtickprefix` but for tick suffixes.
    - fieldname: showexponent
      title: Show Exponent
      values:
        - all
        - first
        - last
        - none
      default: all
      description: If `all`, all exponents are shown besides their significands. If
        `first`, only the exponent of the first tick is shown. If `last`, only the
        exponent of the last tick is shown. If `none`, no exponents appear.
    - fieldname: exponentformat
      title: Exponent Format
      values:
        none: '1,000,000,000'
        e: '1e+9'
        E: '1E+9'
        power: '1x10^9'
        SI: '1G'
        B: '1B'
      default: B
      description: Determines a formatting rule for the tick exponents. The dropdown
        shows formatting for the number 1,000,000,000.
    - fieldname: separatethousands
      title: Separate Thousands
      values: boolean
      description: If `true`, even 4-digit integers are separated
    - fieldname: tickformat
      title: Tick Format
      values: string
      default: ''
      description: 'Sets the tick label formatting rule using d3 formatting mini-languages
        which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format
        And for dates see: https://github.com/d3/d3-time-format/blob/master/README.md#locale_format
        We add one item to d3''s date formatter: `%{n}f` for fractional seconds with
        n digits. For example, `2016-10-13 09:15:23.456` with tickformat `%H~%M~%S.%2f`
        would display `09~15~23.46`'
    - fieldname: hoverformat
      title: Hover Format
      values: string
      default: ''
      description: 'Sets the hover text formatting rule using d3 formatting mini-languages
        which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format
        And for dates see: https://github.com/d3/d3-time-format/blob/master/README.md#locale_format
        We add one item to d3''s date formatter: `%{n}f` for fractional seconds with
        n digits. For example, `2016-10-13 09:15:23.456` with tickformat `%H~%M~%S.%2f`
        would display `09~15~23.46`'
    - fieldname: showline
      title: Show Bounding Line
      values: boolean
      description: Determines whether or not a line bounding this axis is drawn.
    - fieldname: linecolor
      title: Line Color
      values: color
      default: '#444'
      description: Sets the axis line color.
    - fieldname: linewidth
      title: Linewidth
      values: number
      min: 0
      default: 1
      description: Sets the width (in px) of the axis line.
    - fieldname: showgrid
      title: Show Grid Lines
      values: boolean
      description: Determines whether or not grid lines are drawn. If `true`, the
        grid lines are drawn at every tick mark.
    - fieldname: gridcolor
      title: Grid Color
      values: color
      default: rgb(204, 204, 204)
      description: Sets the color of the grid lines.
    - fieldname: gridwidth
      title: Grid Width
      values: number
      min: 0
      default: 1
      description: Sets the width (in px) of the grid lines.
    - fieldname: zeroline
      title: Line at Zero Value
      values: boolean
      description: Determines whether or not a line is drawn at along the 0 value
        of this axis. If `true`, the zero line is drawn on top of the grid lines.
    - fieldname: zerolinecolor
      title: Line at Zero Color
      values: color
      default: '#444'
      description: Sets the line color of the zero line.
    - fieldname: zerolinewidth
      title: Line at Zero Width
      values: number
      default: 1
      description: Sets the width (in px) of the zero line.
    - fieldname: calendar
      title: Calendar
      values:
        gregorian: Gregorian
        chinese: Chinese
        coptic: Coptic
        discworld: Discworld
        ethiopian: Ethiopian
        hebrew: Hebrew
        islamic: Islamic
        julian: Julian
        mayan: Mayan
        nanakshahi: Nanakshahi
        nepali: Nepali
        persian: Old Persian
        jalali: Jalali
        taiwan: Minguo
        thai: Thai
        ummalqura: Umm al-Qura
      default: gregorian
      description: Sets the calendar system to use for `range` and `tick0` if this
        is a date axis. This does not set the calendar for interpreting data on this
        axis, that's specified in the trace or via the global `layout.calendar`
    - fieldname: categoryarraysrc
    - fieldname: tickvalssrc
    - fieldname: ticktextsrc
  - fieldname: dragmode
    title: Drag Mode
    values:
      - orbit
      - turntable
      - zoom
      - pan
      - 'false'
    default: turntable
    description: Determines the mode of drag interactions for this scene.
  - fieldname: hovermode
    title: Hover Mode
    values:
      - closest
      - 'false'
    default: closest
    description: Determines the mode of hover interactions for this scene.
  - fieldname: annotations
    multifield: true
    description: Each object has one or more of the keys listed below. An annotation
      is a text element that can be placed anywhere in the plot. It can be positioned
      with respect to relative coordinates in the plot or with respect to the actual
      data coordinates of the graph. Annotations can be shown with or without an arrow.
    subfields:
    - fieldname: visible
      title: Visible
      values: boolean
      default: 'true'
      description: Determines whether or not this annotation is visible.
    - fieldname: x
      title: X Position
      values: number or categorical coordinate string
      description: Sets the annotation's x position.
    - fieldname: y
      title: Y Position
      values: number or categorical coordinate string
      description: Sets the annotation's y position.
    - fieldname: z
      title: Z Position
      values: number or categorical coordinate string
      description: Sets the annotation's z position.
    - fieldname: ax
      title: X Arrow Component
      values: number
      description: Sets the x component of the arrow tail about the arrow head (in
        pixels).
    - fieldname: ay
      title: Y Arrow Component
      values: number
      description: Sets the y component of the arrow tail about the arrow head (in
        pixels).
    - fieldname: xanchor
      title: X Position Anchor
      values:
        - auto
        - left
        - center
        - right
      default: auto
      description: Sets the text box's horizontal position anchor This anchor binds
        the `x` position to the `left`, `center` or `right` of the annotation. For
        example, if `x` is set to 1, `xref` to `paper` and `xanchor` to `right` then
        the right-most portion of the annotation lines up with the right-most edge
        of the plotting area. If `auto`, the anchor is equivalent to `center` for
        data-referenced annotations or if there is an arrow, whereas for paper-referenced
        with no arrow, the anchor picked corresponds to the closest side.
    - fieldname: xshift
      title: X Position Shift
      values: number
      default: 0
      description: Shifts the position of the whole annotation and arrow to the right
        (positive) or left (negative) by this many pixels.
    - fieldname: yanchor
      title: Y Position Anchor
      values:
        - auto
        - top
        - middle
        - bottom
      default: auto
      description: Sets the text box's vertical position anchor This anchor binds
        the `y` position to the `top`, `middle` or `bottom` of the annotation. For
        example, if `y` is set to 1, `yref` to `paper` and `yanchor` to `top` then
        the top-most portion of the annotation lines up with the top-most edge of
        the plotting area. If `auto`, the anchor is equivalent to `middle` for data-referenced
        annotations or if there is an arrow, whereas for paper-referenced with no
        arrow, the anchor picked corresponds to the closest side.
    - fieldname: yshift
      title: Y Position Shift
      values: number
      default: 0
      description: Shifts the position of the whole annotation and arrow up (positive)
        or down (negative) by this many pixels.
    - fieldname: text
      title: Annotation Text
      values: string
      description: Sets the text associated with this annotation. Plotly uses a subset
        of HTML tags to do things like newline (&lt;br&gt;), bold (&lt;b&gt;&lt;/b&gt;),
        italics (&lt;i&gt;&lt;/i&gt;), hyperlinks (&lt;a href='...'&gt;&lt;/a&gt;).
        Tags &lt;em&gt;, &lt;sup&gt;, &lt;sub&gt; &lt;span&gt; are also supported.
    - fieldname: textangle
      title: Text Angle
      values: angle
      default: 0
      description: Sets the angle at which the `text` is drawn with respect to the
        horizontal.
    - fieldname: font
      description: Sets the annotation text font.
      subfields:
      - fieldname: family
        title: Family
        values: string
        description: HTML font family - the typeface that will be applied by the web
          browser. The web browser will only be able to apply a font if it is available
          on the system which it operates. Provide multiple font families, separated
          by commas, to indicate the preference in which to apply fonts if they aren't
          available on the system. The plotly service (at https://plot.ly or on-premise)
          generates images on a server, where only a select number of fonts are installed
          and supported. These include `Arial`, `Balto`, `Courier New`, `Droid Sans`,,
          `Droid Serif`, `Droid Sans Mono`, `Gravitas One`, `Old Standard TT`, `Open
          Sans`, `Overpass`, `PT Sans Narrow`, `Raleway`, `Times New Roman`.
      - fieldname: size
        title: Size
        values: number
        min: 1
      - fieldname: color
        title: Color
        values: color
    - fieldname: width
      title: Width
      values: number
      min: 1
      description: Sets an explicit width for the text box. null (default) lets the
        text set the box width. Wider text will be clipped. There is no automatic
        wrapping; use &lt;br&gt; to start a new line.
    - fieldname: height
      title: Height
      values: number
      min: 1
      description: Sets an explicit height for the text box. null (default) lets the
        text set the box height. Taller text will be clipped.
    - fieldname: opacity
      title: Opacity
      values: number
      min: 0
      max: 1
      default: 1
      description: Sets the opacity of the annotation (text + arrow).
    - fieldname: align
      title: Horizontal Alignment
      values:
        - left
        - center
        - right
      default: center
      description: Sets the horizontal alignment of the `text` within the box. Has
        an effect only if `text` spans more two or more lines (i.e. `text` contains
        one or more &lt;br&gt; HTML tags) or if an explicit width is set to override
        the text width.
    - fieldname: valign
      title: Vertical Alignment
      values:
        - top
        - middle
        - bottom
      default: middle
      description: Sets the vertical alignment of the `text` within the box. Has an
        effect only if an explicit height is set to override the text height.
    - fieldname: bgcolor
      title: Background Color
      values: color
      default: rgba(0,0,0,0)
      description: Sets the background color of the annotation.
    - fieldname: bordercolor
      title: Border Color
      values: color
      default: rgba(0,0,0,0)
      description: Sets the color of the border enclosing the annotation `text`.
    - fieldname: borderpad
      title: Border Padding
      values: number
      min: 0
      default: 1
      description: Sets the padding (in px) between the `text` and the enclosing border.
    - fieldname: borderwidth
      title: Border Width
      values: number
      min: 0
      default: 1
      description: Sets the width (in px) of the border enclosing the annotation `text`.
    - fieldname: showarrow
      title: Show Arrow
      values: boolean
      default: 'true'
      description: Determines whether or not the annotation is drawn with an arrow.
        If `true`, `text` is placed near the arrow's tail. If `false`, `text` lines
        up with the `x` and `y` provided.
    - fieldname: arrowcolor
      title: Arrow Color
      values: color
      description: Sets the color of the annotation arrow.
    - fieldname: arrowhead
      title: Arrow Head Style
      values: integer
      min: 0
      max: 8
      default: 1
      description: Sets the annotation arrow head style.
    - fieldname: arrowsize
      title: Arrow Size
      values: number
      min: 0.3
      default: 1
      description: Sets the size (in px) of annotation arrow head.
    - fieldname: arrowwidth
      title: Arrow Width
      values: number
      min: 0.1
      description: Sets the width (in px) of annotation arrow.
    - fieldname: standoff
      title: Arrow Standoff Distance
      values: number
      min: 0
      default: 0
      description: Sets a distance, in pixels, to move the arrowhead away from the
        position it is pointing at, for example to point at the edge of a marker independent
        of zoom. Note that this shortens the arrow from the `ax` / `ay` vector, in
        contrast to `xshift` / `yshift` which moves everything by this amount.
    - fieldname: hovertext
      title: Hover Text
      values: string
      description: Sets text to appear when hovering over this annotation. If omitted
        or blank, no hover label will appear.
    - fieldname: hoverlabel
      title: Hover Label
      subfields:
      - fieldname: bgcolor
        title: Background Color
        values: color
        description: Sets the background color of the hover label. By default uses
          the annotation's `bgcolor` made opaque, or white if it was transparent.
      - fieldname: bordercolor
        title: Border Color
        values: color
        description: Sets the border color of the hover label. By default uses either
          dark grey or white, for maximum contrast with `hoverlabel.bgcolor`.
      - fieldname: font
        description: Sets the hover label text font. By default uses the global hover
          font and size, with color from `hoverlabel.bordercolor`.
        subfields:
        - fieldname: family
          title: Family
          values: string
          description: HTML font family - the typeface that will be applied by the
            web browser. The web browser will only be able to apply a font if it is
            available on the system which it operates. Provide multiple font families,
            separated by commas, to indicate the preference in which to apply fonts
            if they aren't available on the system. The plotly service (at https://plot.ly
            or on-premise) generates images on a server, where only a select number
            of fonts are installed and supported. These include `Arial`, `Balto`,
            `Courier New`, `Droid Sans`,, `Droid Serif`, `Droid Sans Mono`, `Gravitas
            One`, `Old Standard TT`, `Open Sans`, `Overpass`, `PT Sans Narrow`, `Raleway`,
            `Times New Roman`.
        - fieldname: size
          title: Size
          values: number
          min: 1
        - fieldname: color
          title: Color
          values: color
    - fieldname: captureevents
      title: Capture Mouse Events
      values: boolean
      description: Determines whether the annotation text box captures mouse move
        and click events, or allows those events to pass through to data points in
        the plot that may be behind the annotation. By default `captureevents` is
        `false` unless `hovertext` is provided. If you use the event `plotly_clickannotation`
        without `hovertext` you must explicitly enable `captureevents`.
- fieldname: geo
  title: Geo
  description: Used only for series type `Scatter Geo Plot`
  subfields:
  - fieldname: domain
    title: Domain
    subfields:
    - fieldname: x
      title: X
      values: array
      default: '0, 1'
      description: Sets the horizontal domain of this map (in plot fraction). Each
        object has one or more of the keys listed below.
    - fieldname: y
      title: Y
      values: array
      default: '0, 1'
      description: Sets the vertical domain of this map (in plot fraction). Each object
        has one or more of the keys listed below.
  - fieldname: resolution
    title: Resolution
    values:
      - 110
      - 50
    default: 110
    description: Sets the resolution of the base layers. The values have units of
      km/mm e.g. 110 corresponds to a scale ratio of 1:110,000,000.
  - fieldname: scope
    title: Map Scope
    values:
      - world
      - usa
      - europe
      - asia
      - africa
      - north america
      - south america
    default: world
    description: Set the scope of the map.
  - fieldname: projection
    title: Map Projection Type
    subfields:
    - fieldname: type
      title: Type
      values:
        - equirectangular
        - mercator
        - orthographic
        - natural earth
        - kavrayskiy7
        - miller
        - robinson
        - eckert4
        - azimuthal equal area
        - azimuthal equidistant
        - conic equal area
        - conic conformal
        - conic equidistant
        - gnomonic
        - stereographic
        - mollweide
        - hammer
        - transverse mercator
        - albers usa
        - winkel tripel
        - aitoff
        - sinusoidal
      description: Sets the projection type.
    - fieldname: rotation
      title: Rotation
      subfields:
      - fieldname: lon
        title: Longitude
        values: number
        description: Rotates the map along parallels (in degrees East).
      - fieldname: lat
        title: Latitude
        values: number
        description: Rotates the map along meridians (in degrees North).
      - fieldname: roll
        title: Map Rotation (roll)
        values: number
        description: Roll the map (in degrees) For example, a roll of `180` makes
          the map appear upside down.
    - fieldname: parallels
      title: Parallels
      values: array
      description: For conic projection types only. Sets the parallels (tangent, secant)
        where the cone intersects the sphere. Each object has one or more of the keys
        listed below.
    - fieldname: scale
      title: Zoom Scale
      values: number
      min: 0
      max: 10
      default: 1
      description: Zooms in or out on the map view.
  - fieldname: showcoastlines
    title: Show Coastlines
    values: boolean
    description: Sets whether or not the coastlines are drawn.
  - fieldname: coastlinecolor
    title: Coastline Color
    values: color
    default: '#444'
    description: Sets the coastline color.
  - fieldname: coastlinewidth
    title: Coastline Width
    values: number
    min: 0
    default: 1
    description: Sets the coastline stroke width (in px).
  - fieldname: showland
    title: Show Land
    values: boolean
    description: Sets whether or not land masses are filled in color.
  - fieldname: landcolor
    title: Land Color
    values: color
    default: '#F0DC82'
    description: Sets the land mass color.
  - fieldname: showocean
    title: Show Ocean
    values: boolean
    description: Sets whether or not oceans are filled in color.
  - fieldname: oceancolor
    title: Ocean Color
    values: color
    default: '#3399FF'
    description: Sets the ocean color
  - fieldname: showlakes
    title: Show Lakes
    values: boolean
    description: Sets whether or not lakes are drawn.
  - fieldname: lakecolor
    title: Lake Color
    values: color
    default: '#3399FF'
    description: Sets the color of the lakes.
  - fieldname: showrivers
    title: Show Rivers
    values: boolean
    description: Sets whether or not rivers are drawn.
  - fieldname: rivercolor
    title: River Color
    values: color
    default: '#3399FF'
    description: Sets color of the rivers.
  - fieldname: riverwidth
    title: River Width
    values: number
    min: 0
    default: 1
    description: Sets the stroke width (in px) of the rivers.
  - fieldname: showcountries
    title: Show Countries
    values: boolean
    description: Sets whether or not country boundaries are drawn.
  - fieldname: countrycolor
    title: Country Color
    values: color
    default: '#444'
    description: Sets line color of the country boundaries.
  - fieldname: countrywidth
    title: Country Width
    values: number
    min: 0
    default: 1
    description: Sets line width (in px) of the country boundaries.
  - fieldname: showsubunits
    title: Show Sub Units
    values: boolean
    description: Sets whether or not boundaries of subunits within countries (e.g.
      states, provinces) are drawn.
  - fieldname: subunitcolor
    title: Sub Unit Color
    values: color
    default: '#444'
    description: Sets the color of the subunits boundaries.
  - fieldname: subunitwidth
    title: Sub Unit Width
    values: number
    min: 0
    default: 1
    description: Sets the stroke width (in px) of the subunits boundaries.
  - fieldname: showframe
    title: Show Frame
    values: boolean
    description: Sets whether or not a frame is drawn around the map.
  - fieldname: framecolor
    title: Frame Color
    values: color
    default: '#444'
    description: Sets the color the frame.
  - fieldname: framewidth
    title: Frame Width
    values: number
    min: 0
    default: 1
    description: Sets the stroke width (in px) of the frame.
  - fieldname: bgcolor
    title: Background Color
    values: color
    default: '#fff'
    description: Set the background color of the map
  - fieldname: lonaxis
    title: Longitude Axis
    subfields:
    - fieldname: range
      title: Range
      values: array
      description: Sets the range of this axis (in degrees). Each object has one or
        more of the keys listed below.
    - fieldname: showgrid
      title: Show Grid Lines
      values: boolean
      description: Sets whether or not graticule are shown on the map.
    - fieldname: tick0
      title: First Tick Position
      values: number
      description: Sets the graticule's starting tick longitude/latitude.
    - fieldname: dtick
      title: Tick In-Between Step
      values: number
      description: Sets the graticule's longitude/latitude tick step.
    - fieldname: gridcolor
      title: Grid Color
      values: color
      default: '#eee'
      description: Sets the graticule's stroke color.
    - fieldname: gridwidth
      title: Grid Width
      values: number
      min: 0
      default: 1
      description: Sets the graticule's stroke width (in px).
  - fieldname: lataxis
    title: Latitude Axis
    subfields:
    - fieldname: range
      title: Range
      values: array
      description: Sets the range of this axis (in degrees). Each object has one or
        more of the keys listed below.
    - fieldname: showgrid
      title: Show Grid Lines
      values: boolean
      description: Sets whether or not graticule are shown on the map.
    - fieldname: tick0
      title: First Tick Position
      values: number
      description: Sets the graticule's starting tick longitude/latitude.
    - fieldname: dtick
      title: Tick In-Between Step
      values: number
      description: Sets the graticule's longitude/latitude tick step.
    - fieldname: gridcolor
      title: Grid Color
      values: color
      default: '#eee'
      description: Sets the graticule's stroke color.
    - fieldname: gridwidth
      title: Grid Width
      values: number
      min: 0
      default: 1
      description: Sets the graticule's stroke width (in px).
- fieldname: mapbox
  description: Used only for series type `Scatter Map Plot (Mapbox Integration)`
  title: Mapbox
  subfields:
  - fieldname: _arrayAttrRegexps
  - fieldname: domain
    title: Domain
    subfields:
    - fieldname: x
      title: X
      values: array
      default: '0, 1'
      description: Sets the horizontal domain of this subplot (in plot fraction).
        Each object has one or more of the keys listed below.
    - fieldname: y
      title: Y
      values: array
      default: '0, 1'
      description: Sets the vertical domain of this subplot (in plot fraction). Each
        object has one or more of the keys listed below.
  - fieldname: accesstoken
    title: Access Token
    values: string
    description: Sets the mapbox access token to be used for this mapbox map. Alternatively,
      the mapbox access token can be set in the plotly configuration options under
      `Mapbox Access Token`.
  - fieldname: style
    title: Map Style
    values: string
    default: basic
    description: Sets the Mapbox map style. Either input one of the default Mapbox
      style names or the URL to a custom style or a valid Mapbox style JSON. See
      https://www.mapbox.com/mapbox-gl-js/example/setstyle/ for more information.
  - fieldname: center
    title: Center
    description: Default map center in longitude and latitude. The style center
      will be used only if the map has not been positioned by other means (e.g. map
      options or user interaction).
    subfields:
    - fieldname: lon
      title: Longitude
      values: number
      default: 0
      description: Sets the longitude of the center of the map (in degrees East).
    - fieldname: lat
      title: Latitude
      values: number
      default: 0
      description: Sets the latitude of the center of the map (in degrees North).
  - fieldname: zoom
    title: Zoom Level
    values: number
    default: 1
    description: Default zoom level. The style zoom will be used only if the map
      has not been positioned by other means (e.g. map options or user interaction).
  - fieldname: bearing
    title: Bearing Angle
    values: number
    default: 0
    description: Default bearing, in degrees clockwise from true north. The style
      bearing will be used only if the map has not been positioned by other means
      (e.g. map options or user interaction).
  - fieldname: pitch
    title: Pitch Angle
    values: number
    default: 0
    description: Default pitch, in degrees. Zero is perpendicular to the surface,
      for a look straight down at the map, while a greater value like 60 looks
      ahead towards the horizon. The style pitch will be used only if the map has
      not been positioned by other means (e.g. map options or user interaction).
  - fieldname: layers
    description: Each object has one or more of the keys listed below.
    subfields:
    - fieldname: sourcetype
      title: Source Type
      values:
        - geojson
        - vector
      default: geojson
      description: Sets the source type for this layer. Support for `raster`, `image`
        and `video` source types is coming soon.
    - fieldname: source
      title: Source Data
      values: number or categorical coordinate string
      description: Sets the source data for this layer. Source can be either a URL,
        a geojson object (with `sourcetype` set to `geojson`) or an array of tile
        URLS (with `sourcetype` set to `vector`).
    - fieldname: sourcelayer
      title: Source Layer
      values: string
      default: ''
      description: Specifies the layer to use from a vector tile source. Required
        for `vector` source type that supports multiple layers.
    - fieldname: type
      title: Type
      values:
        - circle
        - line
        - fill
        - symbol
      default: circle
      description: Sets the layer type. Support for `raster`, `background` types is
        coming soon. Note that `line` and `fill` are not compatible with Point GeoJSON
        geometries.
    - fieldname: below
      title: Below Layer ID
      values: string
      default: ''
      description: Determines if the layer will be inserted before the layer with
        the specified ID. If omitted or set to '', the layer will be inserted above
        every existing layer.
    - fieldname: color
      title: Color
      values: color
      default: '#444'
      description: Sets the primary layer color. If `type` is `circle`, color corresponds
        to the circle color If `type` is `line`, color corresponds to the line color
        If `type` is `fill`, color corresponds to the fill color If `type` is `symbol`,
        color corresponds to the icon color
    - fieldname: opacity
      title: Opacity
      values: number
      min: 0
      max: 1
      default: 1
      description: Sets the opacity of the layer.
    - fieldname: circle
      title: Circle
      subfields:
      - fieldname: radius
        title: Radius
        values: number
        default: 15
        description: Sets the circle radius. Has an effect only when `type` is set
          to `circle`.
    - fieldname: line
      title: Line
      subfields:
      - fieldname: width
        title: Width
        values: number
        default: 2
        description: Sets the line width. Has an effect only when `type` is set to
          `line`.
    - fieldname: fill
      title: Fill
      subfields:
      - fieldname: outlinecolor
        title: Outline Color
        values: color
        default: '#444'
        description: Sets the fill outline color. Has an effect only when `type` is
          set to `fill`.
    - fieldname: symbol
      title: Symbol
      subfields:
      - fieldname: icon
        title: Icon
        values: string
        default: marker
        description: 'Sets the symbol icon image. Full list: https://www.mapbox.com/maki-icons/'
      - fieldname: iconsize
        title: Iconsize
        values: number
        default: 10
        description: Sets the symbol icon size. Has an effect only when `type` is
          set to `symbol`.
      - fieldname: text
        title: Text
        values: string
        default: ''
        description: Sets the symbol text.
      - fieldname: textfont
        title: Text Font
        description: Sets the icon text font. Has an effect only when `type` is set
          to `symbol`.
        subfields:
        - fieldname: family
          title: Family
          values: string
          default: Open Sans Regular, Arial Unicode MS Regular
          description: HTML font family - the typeface that will be applied by the
            web browser. The web browser will only be able to apply a font if it is
            available on the system which it operates. Provide multiple font families,
            separated by commas, to indicate the preference in which to apply fonts
            if they aren't available on the system. The plotly service (at https://plot.ly
            or on-premise) generates images on a server, where only a select number
            of fonts are installed and supported. These include `Arial`, `Balto`,
            `Courier New`, `Droid Sans`,, `Droid Serif`, `Droid Sans Mono`, `Gravitas
            One`, `Old Standard TT`, `Open Sans`, `Overpass`, `PT Sans Narrow`, `Raleway`,
            `Times New Roman`.
        - fieldname: size
          title: Size
          values: number
          min: 1
        - fieldname: color
          title: Color
          values: color
      - fieldname: textposition
        title: Text Position
        values:
          - top left
          - top center
          - top right
          - middle left
          - middle center
          - middle right
          - bottom left
          - bottom center
          - bottom right
        default: middle center
        description: Sets the positions of the `text` elements with respects to the
          (x,y) coordinates.
- fieldname: radialaxis
  title: Radial Axis
  subfields:
  - fieldname: range
    title: Range
    values: array
    description: Defines the start and end point of this radial axis. Each object
      has one or more of the keys listed below.
  - fieldname: domain
    title: Domain
    values: array
    default: '0, 1'
    description: Polar chart subplots are not supported yet. This key has currently
      no effect. Each object has one or more of the keys listed below.
  - fieldname: orientation
    title: Orientation
    values: number
    description: Sets the orientation (an angle with respect to the origin) of the
      radial axis.
  - fieldname: showline
    title: Show Bounding Line
    values: boolean
    description: Determines whether or not the line bounding this radial axis will
      be shown on the figure.
  - fieldname: showticklabels
    title: Show Tick Labels
    values: boolean
    description: Determines whether or not the radial axis ticks will feature tick
      labels.
  - fieldname: tickorientation
    title: Tick Orientation
    values:
      - horizontal
      - vertical
    description: Sets the orientation (from the paper perspective) of the radial axis
      tick labels.
  - fieldname: ticklen
    title: Tick Length
    values: number
    min: 0
    description: Sets the length of the tick lines on this radial axis.
  - fieldname: tickcolor
    title: Tick Color
    values: color
    description: Sets the color of the tick lines on this radial axis.
  - fieldname: ticksuffix
    title: Tick Suffix
    values: string
    description: Sets the length of the tick lines on this radial axis.
  - fieldname: endpadding
    title: End Padding
    values: number
  - fieldname: visible
    title: Visible
    values: boolean
    description: Determines whether or not this axis will be visible.
- fieldname: angularaxis
  title: Angular Axis
  subfields:
  - fieldname: range
    title: Range
    values: array
    description: Defines the start and end point of this angular axis. Each object
      has one or more of the keys listed below.
  - fieldname: domain
    title: Domain
    values: array
    default: '0, 1'
    description: Polar chart subplots are not supported yet. This key has currently
      no effect. Each object has one or more of the keys listed below.
  - fieldname: showline
    title: Show Bounding Line
    values: boolean
    description: Determines whether or not the line bounding this angular axis will
      be shown on the figure.
  - fieldname: showticklabels
    title: Show Tick Labels
    values: boolean
    description: Determines whether or not the angular axis ticks will feature tick
      labels.
  - fieldname: tickorientation
    title: Tick Orientation
    values:
      - horizontal
      - vertical
    description: Sets the orientation (from the paper perspective) of the angular
      axis tick labels.
  - fieldname: ticklen
    title: Tick Length
    values: number
    min: 0
    description: Sets the length of the tick lines on this angular axis.
  - fieldname: tickcolor
    title: Tick Color
    values: color
    description: Sets the color of the tick lines on this angular axis.
  - fieldname: ticksuffix
    title: Tick Suffix
    values: string
    description: Sets the length of the tick lines on this angular axis.
  - fieldname: endpadding
    title: End Padding
    values: number
  - fieldname: visible
    title: Visible
    values: boolean
    description: Determines whether or not this axis will be visible.
- fieldname: direction
  title: Direction
  values:
    - clockwise
    - counterclockwise
  description: For polar plots only. Sets the direction corresponding to positive
    angles.
- fieldname: orientation
  title: Orientation
  values: angle
  description: For polar plots only. Rotates the entire polar by the given angle.
- fieldname: dragmode
  title: Drag Mode
  values:
    - zoom
    - pan
      - select
      - lasso
      - orbit
      - turntable
  default: zoom
  description: Determines the mode of drag interactions. `select` and `lasso` apply
    only to scatter traces with markers or text. `orbit` and `turntable` apply only
    to 3D scenes.
- fieldname: hovermode
  title: Hover Mode
  values:
    - x
    - y
    - closest
    - 'false'
  description: Determines the mode of hover interactions.
- fieldname: hoverlabel
  title: Hover Label
  subfields:
  - fieldname: bgcolor
    title: Background Color
    values: color
    description: Sets the background color of all hover labels on graph
  - fieldname: bordercolor
    title: Border Color
    values: color
    description: Sets the border color of all hover labels on graph.
  - fieldname: font
    title: Font
    subfields:
    - fieldname: family
      title: Family
      values: string
      default: Arial, sans-serif
      description: HTML font family - the typeface that will be applied by the web
        browser. The web browser will only be able to apply a font if it is available
        on the system which it operates. Provide multiple font families, separated
        by commas, to indicate the preference in which to apply fonts if they aren't
        available on the system. The plotly service (at https://plot.ly or on-premise)
        generates images on a server, where only a select number of fonts are installed
        and supported. These include `Arial`, `Balto`, `Courier New`, `Droid Sans`,,
        `Droid Serif`, `Droid Sans Mono`, `Gravitas One`, `Old Standard TT`, `Open
        Sans`, `Overpass`, `PT Sans Narrow`, `Raleway`, `Times New Roman`.
    - fieldname: size
      title: Size
      values: number
      min: 1
      default: 13
    - fieldname: color
      title: Color
      values: color
  - fieldname: namelength
    title: Name Length
    values: integer
    min: -1
    default: 15
    description: Sets the default length (in number of characters) of the trace name
      in the hover labels for all traces. -1 shows the whole name regardless of length.
      0-3 shows the first 0-3 characters, and an integer &gt;3 will show the whole
      name if it is less than that many characters, but if it is longer, will truncate
      to `namelength - 3` characters and add an ellipsis.
- fieldname: legend
  title: Legend
  subfields:
  - fieldname: bgcolor
    title: Background Color
    values: color
    description: Sets the legend background color.
  - fieldname: bordercolor
    title: Border Color
    values: color
    default: '#444'
    description: Sets the color of the border enclosing the legend.
  - fieldname: borderwidth
    title: Border Width
    values: number
    min: 0
    default: 0
    description: Sets the width (in px) of the border enclosing the legend.
  - fieldname: font
    description: Sets the font used to text the legend items.
    subfields:
    - fieldname: family
      title: Family
      values: string
      description: HTML font family - the typeface that will be applied by the web
        browser. The web browser will only be able to apply a font if it is available
        on the system which it operates. Provide multiple font families, separated
        by commas, to indicate the preference in which to apply fonts if they aren't
        available on the system. The plotly service (at https://plot.ly or on-premise)
        generates images on a server, where only a select number of fonts are installed
        and supported. These include `Arial`, `Balto`, `Courier New`, `Droid Sans`,,
        `Droid Serif`, `Droid Sans Mono`, `Gravitas One`, `Old Standard TT`, `Open
        Sans`, `Overpass`, `PT Sans Narrow`, `Raleway`, `Times New Roman`.
    - fieldname: size
      title: Size
      values: number
      min: 1
    - fieldname: color
      title: Color
      values: color
  - fieldname: orientation
    title: Orientation
    values:
      - v
      - h
    default: v
    description: Sets the orientation of the legend.
  - fieldname: traceorder
    title: Trace Order
    values:
      - reversed
      - grouped
      - reversed+grouped
      - normal
    description: Determines the order at which the legend items are displayed. If
      `normal`, the items are displayed top-to-bottom in the same order as the input
      data. If `reversed`, the items are displayed in the opposite order as `normal`.
      If `grouped`, the items are displayed in groups (when a trace `legendgroup`
      is provided). if `grouped+reversed`, the items are displayed in the opposite
      order as `grouped`.
  - fieldname: tracegroupgap
    title: Trace Group Vertical Spacing
    values: number
    min: 0
    default: 10
    description: Sets the amount of vertical space (in px) between legend groups.
  - fieldname: x
    title: X Position
    values: number
    min: -2
    max: 3
    default: 1.02
    description: Sets the x position (in normalized coordinates) of the legend.
  - fieldname: xanchor
    title: X Position Anchor
    values:
      - auto
      - left
      - center
      - right
    default: left
    description: Sets the legend's horizontal position anchor. This anchor binds the
      `x` position to the `left`, `center` or `right` of the legend.
  - fieldname: y
    title: Y Position
    values: number
    min: -2
    max: 3
    default: 1
    description: Sets the y position (in normalized coordinates) of the legend.
  - fieldname: yanchor
    title: Y Position Anchor
    values:
      - auto
      - top
      - middle
      - bottom
    default: auto
    description: Sets the legend's vertical position anchor This anchor binds the
      `y` position to the `top`, `middle` or `bottom` of the legend.
- fieldname: annotations
  multifield: true
  description: Each object has one or more of the keys listed below. An annotation
    is a text element that can be placed anywhere in the plot. It can be positioned
    with respect to relative coordinates in the plot or with respect to the actual
    data coordinates of the graph. Annotations can be shown with or without an arrow.
  subfields:
  - fieldname: visible
    title: Visible
    values: boolean
    default: 'true'
    description: Determines whether or not this annotation is visible.
  - fieldname: x
    title: X Position
    values: number or categorical coordinate string
    description: Sets the annotation's x position. If the axis `type` is `log`, then
      you must take the log of your desired range. If the axis `type` is `date`, it
      should be date strings, like date data, though Date objects and unix milliseconds
      will be accepted and converted to strings. If the axis `type` is `category`,
      it should be numbers, using the scale where each category is assigned a serial
      number from zero in the order it appears.
  - fieldname: y
    title: Y Position
    values: number or categorical coordinate string
    description: Sets the annotation's y position. If the axis `type` is `log`, then
      you must take the log of your desired range. If the axis `type` is `date`, it
      should be date strings, like date data, though Date objects and unix milliseconds
      will be accepted and converted to strings. If the axis `type` is `category`,
      it should be numbers, using the scale where each category is assigned a serial
      number from zero in the order it appears.
  - fieldname: text
    title: Text
    values: string
    description: Sets the text associated with this annotation. Plotly uses a subset
      of HTML tags to do things like newline (&lt;br&gt;), bold (&lt;b&gt;&lt;/b&gt;),
      italics (&lt;i&gt;&lt;/i&gt;), hyperlinks (&lt;a href='...'&gt;&lt;/a&gt;).
      Tags &lt;em&gt;, &lt;sup&gt;, &lt;sub&gt; &lt;span&gt; are also supported.
  - fieldname: textangle
    title: Text Angle
    values: angle
    default: 0
    description: Sets the angle at which the `text` is drawn with respect to the horizontal.
  - fieldname: font
    description: Sets the annotation text font.
    subfields:
    - fieldname: family
      title: Family
      values: string
      description: HTML font family - the typeface that will be applied by the web
        browser. The web browser will only be able to apply a font if it is available
        on the system which it operates. Provide multiple font families, separated
        by commas, to indicate the preference in which to apply fonts if they aren't
        available on the system. The plotly service (at https://plot.ly or on-premise)
        generates images on a server, where only a select number of fonts are installed
        and supported. These include `Arial`, `Balto`, `Courier New`, `Droid Sans`,,
        `Droid Serif`, `Droid Sans Mono`, `Gravitas One`, `Old Standard TT`, `Open
        Sans`, `Overpass`, `PT Sans Narrow`, `Raleway`, `Times New Roman`.
    - fieldname: size
      title: Size
      values: number
      min: 1
    - fieldname: color
      title: Color
      values: color
  - fieldname: width
    title: Width
    values: number
    min: 1
    description: Sets an explicit width for the text box. null (default) lets the
      text set the box width. Wider text will be clipped. There is no automatic wrapping;
      use &lt;br&gt; to start a new line.
  - fieldname: height
    title: Height
    values: number
    min: 1
    description: Sets an explicit height for the text box. null (default) lets the
      text set the box height. Taller text will be clipped.
  - fieldname: opacity
    title: Opacity
    values: number
    min: 0
    max: 1
    default: 1
    description: Sets the opacity of the annotation (text + arrow).
  - fieldname: align
    title: Align
    values:
      - left
      - center
      - right
    default: center
    description: Sets the horizontal alignment of the `text` within the box. Has an
      effect only if `text` spans more two or more lines (i.e. `text` contains one
      or more &lt;br&gt; HTML tags) or if an explicit width is set to override the
      text width.
  - fieldname: valign
    title: Vertical Alignment
    values:
      - top
      - middle
      - bottom
    default: middle
    description: Sets the vertical alignment of the `text` within the box. Has an
      effect only if an explicit height is set to override the text height.
  - fieldname: bgcolor
    title: Background Color
    values: color
    default: rgba(0,0,0,0)
    description: Sets the background color of the annotation.
  - fieldname: bordercolor
    title: Border Color
    values: color
    default: rgba(0,0,0,0)
    description: Sets the color of the border enclosing the annotation `text`.
  - fieldname: borderpad
    title: Border Padding
    values: number
    min: 0
    default: 1
    description: Sets the padding (in px) between the `text` and the enclosing border.
  - fieldname: borderwidth
    title: Border Width
    values: number
    min: 0
    default: 1
    description: Sets the width (in px) of the border enclosing the annotation `text`.
  - fieldname: showarrow
    title: Show Arrow
    values: boolean
    default: 'true'
    description: Determines whether or not the annotation is drawn with an arrow.
      If `true`, `text` is placed near the arrow's tail. If `false`, `text` lines
      up with the `x` and `y` provided.
  - fieldname: arrowcolor
    title: Arrow Color
    values: color
    description: Sets the color of the annotation arrow.
  - fieldname: arrowhead
    title: Arrow Head Style
    values: integer
    min: 0
    max: 8
    default: 1
    description: Sets the annotation arrow head style.
  - fieldname: arrowsize
    title: Arrow Size
    values: number
    min: 0.3
    default: 1
    description: Sets the size (in px) of annotation arrow head.
  - fieldname: arrowwidth
    title: Arrow Width
    values: number
    min: 0.1
    description: Sets the width (in px) of annotation arrow.
  - fieldname: standoff
    title: Arrow Standoff Distance
    values: number
    min: 0
    default: 0
    description: Sets a distance, in pixels, to move the arrowhead away from the position
      it is pointing at, for example to point at the edge of a marker independent
      of zoom. Note that this shortens the arrow from the `ax` / `ay` vector, in contrast
      to `xshift` / `yshift` which moves everything by this amount.
  - fieldname: ax
    title: Arrow X Component
    values: number or categorical coordinate string
    description: Sets the x component of the arrow tail about the arrow head. If `axref`
      is `pixel`, a positive (negative) component corresponds to an arrow pointing
      from right to left (left to right). If `axref` is an axis, this is an absolute
      value on that axis, like `x`, NOT a relative value.
  - fieldname: ay
    title: Arrow Y Component
    values: number or categorical coordinate string
    description: Sets the y component of the arrow tail about the arrow head. If `ayref`
      is `pixel`, a positive (negative) component corresponds to an arrow pointing
      from bottom to top (top to bottom). If `ayref` is an axis, this is an absolute
      value on that axis, like `y`, NOT a relative value.
  - fieldname: axref
    title: Tail X Terms
    values:
      - pixel
      - x
    default: pixel
    description: Indicates in what terms the tail of the annotation (ax,ay) is specified.
      If `pixel`, `ax` is a relative offset in pixels from `x`. If set to an x axis
      id (e.g. `x` or `x2`), `ax` is specified in the same terms as that axis. This
      is useful for trendline annotations which should continue to indicate the
      correct trend when zoomed.
  - fieldname: ayref
    title: Tail Y Terms
    values:
      - pixel
      - y
    default: pixel
    description: Indicates in what terms the tail of the annotation (ax,ay) is specified.
      If `pixel`, `ay` is a relative offset in pixels from `y`. If set to a y axis
      id (e.g. `y` or `y2`), `ay` is specified in the same terms as that axis. This
      is useful for trendline annotations which should continue to indicate the
      correct trend when zoomed.
  - fieldname: xref
    title: X Coordinate Axis
    values:
      - paper
      - x
    description: Sets the annotation's x coordinate axis. If set to an x axis id (e.g.
      `x` or `x2`), the `x` position refers to an x coordinate If set to `paper`,
      the `x` position refers to the distance from the left side of the plotting area
      in normalized coordinates where 0 (1) corresponds to the left (right) side.
  - fieldname: xanchor
    title: X Position Anchor
    values:
      - auto
      - left
      - center
      - right
    default: auto
    description: Sets the text box's horizontal position anchor This anchor binds
      the `x` position to the `left`, `center` or `right` of the annotation. For example,
      if `x` is set to 1, `xref` to `paper` and `xanchor` to `right` then the right-most
      portion of the annotation lines up with the right-most edge of the plotting
      area. If `auto`, the anchor is equivalent to `center` for data-referenced annotations
      or if there is an arrow, whereas for paper-referenced with no arrow, the anchor
      picked corresponds to the closest side.
  - fieldname: xshift
    title: X Position Shift
    values: number
    default: 0
    description: Shifts the position of the whole annotation and arrow to the right
      (positive) or left (negative) by this many pixels.
  - fieldname: yref
    title: Y Coordinate Axis
    values:
      - paper
      - y
    description: Sets the annotation's y coordinate axis. If set to an y axis id (e.g.
      `y` or `y2`), the `y` position refers to an y coordinate If set to `paper`,
      the `y` position refers to the distance from the bottom of the plotting area
      in normalized coordinates where 0 (1) corresponds to the bottom (top).
  - fieldname: yanchor
    title: Y Position Anchor
    values:
      - auto
      - top
      - middle
      - bottom
    default: auto
    description: Sets the text box's vertical position anchor This anchor binds the
      `y` position to the `top`, `middle` or `bottom` of the annotation. For example,
      if `y` is set to 1, `yref` to `paper` and `yanchor` to `top` then the top-most
      portion of the annotation lines up with the top-most edge of the plotting area.
      If `auto`, the anchor is equivalent to `middle` for data-referenced annotations
      or if there is an arrow, whereas for paper-referenced with no arrow, the anchor
      picked corresponds to the closest side.
  - fieldname: yshift
    title: Y Position Shift
    values: number
    default: 0
    description: Shifts the position of the whole annotation and arrow up (positive)
      or down (negative) by this many pixels.
  - fieldname: clicktoshow
    title: Click to Show
    values:
      - 'false'
      - onoff
      - onout
    description: 'Makes this annotation respond to clicks on the plot. If you click
      a data point that exactly matches the `x` and `y` values of this annotation,
      and it is hidden (visible: false), it will appear. In `onoff` mode, you must
      click the same point again to make it disappear, so if you click multiple points,
      you can show multiple annotations. In `onout` mode, a click anywhere else in
      the plot (on another data point or not) will hide this annotation. If you need
      to show/hide this annotation in response to different `x` or `y` values, you
      can set `xclick` and/or `yclick`. This is useful for example to label the side
      of a bar. To label markers though, `standoff` is preferred over `xclick` and
      `yclick`.'
  - fieldname: xclick
    title: X Click Toggle
    values: number or categorical coordinate string
    description: Toggle this annotation when clicking a data point whose `x` value
      is `xclick` rather than the annotation's `x` value.
  - fieldname: yclick
    title: Y Click Toggle
    values: number or categorical coordinate string
    description: Toggle this annotation when clicking a data point whose `y` value
      is `yclick` rather than the annotation's `y` value.
  - fieldname: hovertext
    title: Hover Text
    values: string
    description: Sets text to appear when hovering over this annotation. If omitted
      or blank, no hover label will appear.
  - fieldname: hoverlabel
    title: Hover Label
    subfields:
    - fieldname: bgcolor
      title: Background Color
      values: color
      description: Sets the background color of the hover label. By default uses the
        annotation's `bgcolor` made opaque, or white if it was transparent.
    - fieldname: bordercolor
      title: Border Color
      values: color
      description: Sets the border color of the hover label. By default uses either
        dark grey or white, for maximum contrast with `hoverlabel.bgcolor`.
    - fieldname: font
      description: Sets the hover label text font. By default uses the global hover
        font and size, with color from `hoverlabel.bordercolor`.
      subfields:
      - fieldname: family
        title: Family
        values: string
        description: HTML font family - the typeface that will be applied by the web
          browser. The web browser will only be able to apply a font if it is available
          on the system which it operates. Provide multiple font families, separated
          by commas, to indicate the preference in which to apply fonts if they aren't
          available on the system. The plotly service (at https://plot.ly or on-premise)
          generates images on a server, where only a select number of fonts are installed
          and supported. These include `Arial`, `Balto`, `Courier New`, `Droid Sans`,,
          `Droid Serif`, `Droid Sans Mono`, `Gravitas One`, `Old Standard TT`, `Open
          Sans`, `Overpass`, `PT Sans Narrow`, `Raleway`, `Times New Roman`.
      - fieldname: size
        title: Size
        values: number
        min: 1
      - fieldname: color
        title: Color
        values: color
  - fieldname: captureevents
    title: Capture Mouse Events
    values: boolean
    description: Determines whether the annotation text box captures mouse move and
      click events, or allows those events to pass through to data points in the plot
      that may be behind the annotation. By default `captureevents` is `false` unless
      `hovertext` is provided. If you use the event `plotly_clickannotation` without
      `hovertext` you must explicitly enable `captureevents`.
- fieldname: shapes
  multifield: true
  description: Each object has one or more of the keys listed below.
  subfields:
  - fieldname: visible
    title: Visible
    values: boolean
    default: 'true'
    description: Determines whether or not this shape is visible.
  - fieldname: type
    title: Type
    values:
      - circle
      - rect
      - path
      - line
    description: Specifies the shape type to be drawn. If `line`, a line is drawn
      from (`x0`,`y0`) to (`x1`,`y1`) If `circle`, a circle is drawn from ((`x0`+`x1`)/2,
      (`y0`+`y1`)/2)) with radius (|(`x0`+`x1`)/2 - `x0`|, |(`y0`+`y1`)/2 -`y0`)|)
      If `rect`, a rectangle is drawn linking (`x0`,`y0`), (`x1`,`y0`), (`x1`,`y1`),
      (`x0`,`y1`), (`x0`,`y0`) If `path`, draw a custom SVG path using `path`.
  - fieldname: layer
    title: Layer
    values:
      - below
      - above
    default: above
    description: Specifies whether shapes are drawn below or above traces.
  - fieldname: xref
    title: X Coordinate Axis
    values:
      - paper
      - x
    description: Sets the shape's x coordinate axis. If set to an x axis id (e.g.
      `x` or `x2`), the `x` position refers to an x coordinate If set to `paper`,
      the `x` position refers to the distance from the left side of the plotting area
      in normalized coordinates where `0` (`1`) corresponds to the left (right) side.
      If the axis `type` is `log`, then you must take the log of your desired range.
      If the axis `type` is `date`, then you must convert the date to unix time in
      milliseconds.
  - fieldname: x0
    title: x0 Starting Coordinate
    values: number or categorical coordinate string
    description: Sets the shape's starting x position. See `type` for more info.
  - fieldname: x1
    title: x1 Ending Coordinate
    values: number or categorical coordinate string
    description: Sets the shape's end x position. See `type` for more info.
  - fieldname: yref
    title: Y Coordinate Axis
    values:
      - paper
      - y
    description: Sets the annotation's y coordinate axis. If set to an y axis id (e.g.
      `y` or `y2`), the `y` position refers to an y coordinate If set to `paper`,
      the `y` position refers to the distance from the bottom of the plotting area
      in normalized coordinates where `0` (`1`) corresponds to the bottom (top).
  - fieldname: y0
    title: y0 Starting Coordinate
    values: number or categorical coordinate string
    description: Sets the shape's starting y position. See `type` for more info.
  - fieldname: y1
    title: y1 Ending Coordinate
    values: number or categorical coordinate string
    description: Sets the shape's end y position. See `type` for more info.
  - fieldname: path
    title: Path
    values: string
    description: 'For `type` `path` - a valid SVG path but with the pixel values replaced
      by data values. There are a few restrictions / quirks only absolute instructions,
      not relative. So the allowed segments are: M, L, H, V, Q, C, T, S, and Z arcs
      (A) are not allowed because radius rx and ry are relative. In the future we
      could consider supporting relative commands, but we would have to decide on
      how to handle date and log axes. Note that even as is, Q and C Bezier paths
      that are smooth on linear axes may not be smooth on log, and vice versa. no
      chained `polybezier` commands - specify the segment type for each one. On category
      axes, values are numbers scaled to the serial numbers of categories because
      using the categories themselves there would be no way to describe fractional
      positions On data axes: because space and T are both normal components of path
      strings, we can''t use either to separate date from time parts. Therefore we''ll
      use underscore for this purpose: 2015-02-21_13:45:56.789'
  - fieldname: opacity
    title: Opacity
    values: number
    min: 0
    max: 1
    default: 1
    description: Sets the opacity of the shape.
  - fieldname: line
    title: Line
    subfields:
    - fieldname: color
      title: Color
      values: color
      description: Sets the line color.
    - fieldname: width
      title: Width
      values: number
      min: 0
      default: 2
      description: Sets the line width (in px).
    - fieldname: dash
      title: Dash
      values: string
      default: solid
      description: Sets the dash style of lines. Set to a dash type string (`solid`,
        `dot`, `dash`, `longdash`, `dashdot`, or `longdashdot`) or a dash length list
        in px (eg `5px,10px,2px,2px`).
  - fieldname: fillcolor
    title: Fill Color
    values: color
    default: rgba(0,0,0,0)
    description: Sets the color filling the shape's interior.
- fieldname: images
  description: Each object has one or more of the keys listed below.
  subfields:
  - fieldname: visible
    title: Visible
    values: boolean
    default: 'true'
    description: Determines whether or not this image is visible.
  - fieldname: source
    title: URL Source
    values: string
    description: Specifies the URL of the image to be used. The URL must be accessible
      from the domain where the plot code is run, and can be either relative or absolute.
  - fieldname: layer
    title: Layer
    values:
      - below
      - above
    default: above
    description: Specifies whether images are drawn below or above traces. When `xref`
      and `yref` are both set to `paper`, image is drawn below the entire plot area.
  - fieldname: sizex
    title: Image Container Horizontal Size
    values: number
    default: 0
    description: Sets the image container size horizontally. The image will be sized
      based on the `position` value. When `xref` is set to `paper`, units are sized
      relative to the plot width.
  - fieldname: sizey
    title: Image Container Vertical Size
    values: number
    default: 0
    description: Sets the image container size vertically. The image will be sized
      based on the `position` value. When `yref` is set to `paper`, units are sized
      relative to the plot height.
  - fieldname: sizing
    title: Image Constraining
    values:
      - fill
      - contain
      - stretch
    default: contain
    description: Specifies which dimension of the image to constrain.
  - fieldname: opacity
    title: Opacity
    values: number
    min: 0
    max: 1
    default: 1
    description: Sets the opacity of the image.
  - fieldname: x
    title: X Position
    values: number or categorical coordinate string
    default: 0
    description: Sets the image's x position. When `xref` is set to `paper`, units
      are sized relative to the plot height. See `xref` for more info
  - fieldname: y
    title: Y Position
    values: number or categorical coordinate string
    default: 0
    description: Sets the image's y position. When `yref` is set to `paper`, units
      are sized relative to the plot height. See `yref` for more info
  - fieldname: xanchor
    title: X Position Anchor
    values:
      - left
      - center
      - right
    default: left
    description: Sets the anchor for the x position
  - fieldname: yanchor
    title: Y Position Anchor
    values:
      - top
      - middle
      - bottom
    default: top
    description: Sets the anchor for the y position.
  - fieldname: xref
    title: X Coordinate Axis
    values:
      - paper
      - x
    default: paper
    description: Sets the images's x coordinate axis. If set to a x axis id (e.g.
      `x` or `x2`), the `x` position refers to an x data coordinate If set to `paper`,
      the `x` position refers to the distance from the left of plot in normalized
      coordinates where `0` (`1`) corresponds to the left (right).
  - fieldname: yref
    title: Y Coordinate Axis
    values:
      - paper
      - y
    default: paper
    description: Sets the images's y coordinate axis. If set to a y axis id (e.g.
      `y` or `y2`), the `y` position refers to a y data coordinate. If set to `paper`,
      the `y` position refers to the distance from the bottom of the plot in normalized
      coordinates where `0` (`1`) corresponds to the bottom (top).
- fieldname: updatemenus
  title: Update Menus
  description: Each object has one or more of the keys listed below.
  subfields:
  - fieldname: _arrayAttrRegexps
  - fieldname: visible
    title: Visible
    values: boolean
    description: Determines whether or not the update menu is visible.
  - fieldname: type
    title: Type
    values:
      - dropdown
      - buttons
    default: dropdown
    description: Determines whether the buttons are accessible via a dropdown menu
      or whether the buttons are stacked horizontally or vertically
  - fieldname: direction
    title: Direction
    values:
      - left
      - right
      - up
      - down
    default: down
    description: Determines the direction in which the buttons are laid out, whether
      in a dropdown menu or a row/column of buttons. For `left` and `up`, the buttons
      will still appear in left-to-right or top-to-bottom order respectively.
  - fieldname: active
    title: Active
    values: integer
    min: -1
    default: 0
    description: Determines which button (by index starting from 0) is considered
      active.
  - fieldname: showactive
    title: Show Active
    values: boolean
    default: 'true'
    description: Highlights active dropdown item or active button if true.
  - fieldname: buttons
    description: Each object has one or more of the keys listed below.
    subfields:
    - fieldname: method
      title: Method
      values:
        - restyle
        - relayout
        - animate
        - update
        - skip
      default: restyle
      description: Sets the Plotly method to be called on click. If the `skip` method
        is used, the API updatemenu will function as normal but will perform no API
        calls and will not bind automatically to state updates. This may be used to
        create a component interface and attach to updatemenu events manually via
        JavaScript.
    - fieldname: args
      title: Arguments
      values: array
      description: Sets the arguments values to be passed to the Plotly method set
        in `method` on click. Each object has one or more of the keys listed below.
    - fieldname: label
      title: Label
      values: string
      default: ''
      description: Sets the text label to appear on the button.
    - fieldname: execute
      title: Execute
      values: boolean
      default: 'true'
      description: When true, the API method is executed. When false, all other behaviors
        are the same and command execution is skipped. This may be useful when hooking
        into, for example, the `plotly_buttonclicked` method and executing the API
        command manually without losing the benefit of the updatemenu automatically
        binding to the state of the plot through the specification of `method` and
        `args`.
  - fieldname: x
    title: X Position
    values: number
    min: -2
    max: 3
    default: -0.05
    description: Sets the x position (in normalized coordinates) of the update menu.
  - fieldname: xanchor
    title: X Position Anchor
    values:
      - auto
      - left
      - center
      - right
    default: right
    description: Sets the update menu's horizontal position anchor. This anchor binds
      the `x` position to the `left`, `center` or `right` of the range selector.
  - fieldname: y
    title: Y Position
    values: number
    min: -2
    max: 3
    default: 1
    description: Sets the y position (in normalized coordinates) of the update menu.
  - fieldname: yanchor
    title: Y Position Anchor
    values:
      - auto
      - top
      - middle
      - bottom
    default: top
    description: Sets the update menu's vertical position anchor This anchor binds
      the `y` position to the `top`, `middle` or `bottom` of the range selector.
  - fieldname: pad
    title: Padding
    description: Sets the padding around the buttons or dropdown menu.
    subfields:
    - fieldname: t
      title: Top
      values: number
      default: 0
      description: The amount of padding (in px) along the top of the component.
    - fieldname: r
      title: Right
      values: number
      default: 0
      description: The amount of padding (in px) on the right side of the component.
    - fieldname: b
      title: Bottom
      values: number
      default: 0
      description: The amount of padding (in px) along the bottom of the component.
    - fieldname: l
      title: Left
      values: number
      default: 0
      description: The amount of padding (in px) on the left side of the component.
  - fieldname: font
    description: Sets the font of the update menu button text.
    subfields:
    - fieldname: family
      title: Family
      values: string
      description: HTML font family - the typeface that will be applied by the web
        browser. The web browser will only be able to apply a font if it is available
        on the system which it operates. Provide multiple font families, separated
        by commas, to indicate the preference in which to apply fonts if they aren't
        available on the system. The plotly service (at https://plot.ly or on-premise)
        generates images on a server, where only a select number of fonts are installed
        and supported. These include `Arial`, `Balto`, `Courier New`, `Droid Sans`,,
        `Droid Serif`, `Droid Sans Mono`, `Gravitas One`, `Old Standard TT`, `Open
        Sans`, `Overpass`, `PT Sans Narrow`, `Raleway`, `Times New Roman`.
    - fieldname: size
      title: Size
      values: number
      min: 1
    - fieldname: color
      title: Color
      values: color
  - fieldname: bgcolor
    title: Background Color
    values: color
    description: Sets the background color of the update menu buttons.
  - fieldname: bordercolor
    title: Border Color
    values: color
    default: '#BEC8D9'
    description: Sets the color of the border enclosing the update menu.
  - fieldname: borderwidth
    title: Border Width
    values: number
    min: 0
    default: 1
    description: Sets the width (in px) of the border enclosing the update menu.
- fieldname: sliders
  description: Each object has one or more of the keys listed below.
  subfields:
  - fieldname: visible
    title: Visible
    values: boolean
    default: 'true'
    description: Determines whether or not the slider is visible.
  - fieldname: active
    title: Active
    values: number
    min: 0
    default: 0
    description: Determines which button (by index starting from 0) is considered
      active.
  - fieldname: steps
    description: Each object has one or more of the keys listed below.
    subfields:
    - fieldname: method
      title: Method
      values:
        - restyle
        - relayout
        - animate
        - update
        - skip
      default: restyle
      description: Sets the Plotly method to be called when the slider value is changed.
        If the `skip` method is used, the API slider will function as normal but will
        perform no API calls and will not bind automatically to state updates. This
        may be used to create a component interface and attach to slider events manually
        via JavaScript.
    - fieldname: args
      title: Arguments
      values: array
      description: Sets the arguments values to be passed to the Plotly method set
        in `method` on slide. Each object has one or more of the keys listed below.
    - fieldname: label
      title: Label
      values: string
      description: Sets the text label to appear on the slider
    - fieldname: value
      title: Value
      values: string
      description: Sets the value of the slider step, used to refer to the step programatically.
        Defaults to the slider label if not provided.
    - fieldname: execute
      title: Execute
      values: boolean
      default: 'true'
      description: When true, the API method is executed. When false, all other behaviors
        are the same and command execution is skipped. This may be useful when hooking
        into, for example, the `plotly_sliderchange` method and executing the API
        command manually without losing the benefit of the slider automatically binding
        to the state of the plot through the specification of `method` and `args`.
  - fieldname: lenmode
    title: Length Mode
    values:
      - fraction
      - pixels
    default: fraction
    description: Determines whether this slider length is set in units of plot `fraction`
      or in `pixels. Use `len` to set the value.
  - fieldname: len
    title: Length
    values: number
    min: 0
    default: 1
    description: Sets the length of the slider This measure excludes the padding of
      both ends. That is, the slider's length is this length minus the padding on
      both ends.
  - fieldname: x
    title: X Position
    values: number
    min: -2
    max: 3
    default: 0
    description: Sets the x position (in normalized coordinates) of the slider.
  - fieldname: pad
    title: Padding
    description: Set the padding of the slider component along each side.
    subfields:
    - fieldname: t
      title: Top
      values: number
      default: 20
      description: The amount of padding (in px) along the top of the component.
    - fieldname: r
      title: Right
      values: number
      default: 0
      description: The amount of padding (in px) on the right side of the component.
    - fieldname: b
      title: Bottom
      values: number
      default: 0
      description: The amount of padding (in px) along the bottom of the component.
    - fieldname: l
      title: Left
      values: number
      default: 0
      description: The amount of padding (in px) on the left side of the component.
  - fieldname: xanchor
    title: X Position Anchor
    values:
      - auto
      - left
      - center
      - right
    default: left
    description: Sets the slider's horizontal position anchor. This anchor binds the
      `x` position to the `left`, `center` or `right` of the range selector.
  - fieldname: y
    title: Y Position
    values: number
    min: -2
    max: 3
    default: 0
    description: Sets the y position (in normalized coordinates) of the slider.
  - fieldname: yanchor
    title: Y Position Anchor
    values:
      - auto
      - top
      - middle
      - bottom
    default: top
    description: Sets the slider's vertical position anchor This anchor binds the
      `y` position to the `top`, `middle` or `bottom` of the range selector.
  - fieldname: transition
    title: Transition
    subfields:
    - fieldname: duration
      title: Duration
      values: number
      min: 0
      default: 150
      description: Sets the duration of the slider transition
    - fieldname: easing
      title: Easing
      values:
        - linear
        - quad
        - cubic
        - sin
        - exp
        - circle
        - elastic
        - back
        - bounce
        - linear-in
        - quad-in
        - cubic-in
        - sin-in
        - exp-in
        - circle-in
        - elastic-in
        - back-in
        - bounce-in
        - linear-out
        - quad-out
        - cubic-out
        - sin-out
        - exp-out
        - circle-out
        - elastic-out
        - back-out
        - bounce-out
        - linear-in-out
        - quad-in-out
        - cubic-in-out
        - sin-in-out
        - exp-in-out
        - circle-in-out
        - elastic-in-out
        - back-in-out
        - bounce-in-out
      default: cubic-in-out
      description: Sets the easing function of the slider transition
  - fieldname: currentvalue
    title: Current Value
    subfields:
    - fieldname: visible
      title: Visible
      values: boolean
      default: 'true'
      description: Shows the currently-selected value above the slider.
    - fieldname: xanchor
      title: X Position Anchor
      values:
        - left
        - center
        - right
      default: left
      description: The alignment of the value readout relative to the length of the
        slider.
    - fieldname: offset
      title: Offset
      values: number
      default: 10
      description: The amount of space, in pixels, between the current value label
        and the slider.
    - fieldname: prefix
      title: Prefix
      values: string
      description: When currentvalue.visible is true, this sets the prefix of the
        label.
    - fieldname: suffix
      title: Suffix
      values: string
      description: When currentvalue.visible is true, this sets the suffix of the
        label.
    - fieldname: font
      description: Sets the font of the current value label text.
      subfields:
      - fieldname: family
        title: Family
        values: string
        description: HTML font family - the typeface that will be applied by the web
          browser. The web browser will only be able to apply a font if it is available
          on the system which it operates. Provide multiple font families, separated
          by commas, to indicate the preference in which to apply fonts if they aren't
          available on the system. The plotly service (at https://plot.ly or on-premise)
          generates images on a server, where only a select number of fonts are installed
          and supported. These include `Arial`, `Balto`, `Courier New`, `Droid Sans`,,
          `Droid Serif`, `Droid Sans Mono`, `Gravitas One`, `Old Standard TT`, `Open
          Sans`, `Overpass`, `PT Sans Narrow`, `Raleway`, `Times New Roman`.
      - fieldname: size
        title: Size
        values: number
        min: 1
      - fieldname: color
        title: Color
        values: color
  - fieldname: font
    description: Sets the font of the slider step labels.
    subfields:
    - fieldname: family
      title: Family
      values: string
      description: HTML font family - the typeface that will be applied by the web
        browser. The web browser will only be able to apply a font if it is available
        on the system which it operates. Provide multiple font families, separated
        by commas, to indicate the preference in which to apply fonts if they aren't
        available on the system. The plotly service (at https://plot.ly or on-premise)
        generates images on a server, where only a select number of fonts are installed
        and supported. These include `Arial`, `Balto`, `Courier New`, `Droid Sans`,,
        `Droid Serif`, `Droid Sans Mono`, `Gravitas One`, `Old Standard TT`, `Open
        Sans`, `Overpass`, `PT Sans Narrow`, `Raleway`, `Times New Roman`.
    - fieldname: size
      title: Size
      values: number
      min: 1
    - fieldname: color
      title: Color
      values: color
  - fieldname: activebgcolor
    title: Active Background Color
    values: color
    default: '#dbdde0'
    description: Sets the background color of the slider grip while dragging.
  - fieldname: bgcolor
    title: Background Color
    values: color
    default: '#f8fafc'
    description: Sets the background color of the slider.
  - fieldname: bordercolor
    title: Border Color
    values: color
    default: '#bec8d9'
    description: Sets the color of the border enclosing the slider.
  - fieldname: borderwidth
    title: Border Width
    values: number
    min: 0
    default: 1
    description: Sets the width (in px) of the border enclosing the slider.
  - fieldname: ticklen
    title: Tick Length
    values: number
    min: 0
    default: 7
    description: Sets the length in pixels of step tick marks
  - fieldname: tickcolor
    title: Tick Color
    values: color
    default: '#333'
    description: Sets the color of the border enclosing the slider.
  - fieldname: tickwidth
    title: Tick Width
    values: number
    min: 0
    default: 1
    description: Sets the tick width (in px).
  - fieldname: minorticklen
    title: Minor Tick Length
    values: number
    min: 0
    default: 4
    description: Sets the length in pixels of minor step tick marks
- fieldname: calendar
  title: Calendar
  values:
    gregorian: Gregorian
    chinese: Chinese
    coptic: Coptic
    discworld: Discworld
    ethiopian: Ethiopian
    hebrew: Hebrew
    islamic: Islamic
    julian: Julian
    mayan: Mayan
    nanakshahi: Nanakshahi
    nepali: Nepali
    persian: Old Persian
    jalali: Jalali
    taiwan: Minguo
    thai: Thai
    ummalqura: Umm al-Qura
  default: gregorian
  description: Sets the default calendar system to use for interpreting and displaying
    dates throughout the plot.
